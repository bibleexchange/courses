{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\revelation\\\\quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Component } from 'react';\nimport styles from '../../styles/Revelation.module.css';\nimport Head from 'next/head';\nimport { withRouter } from \"next/router\";\nimport Textbook from './textbook';\nimport Navigation from './navigation';\nimport Line, { lineTypes, templates } from '../Blocks/Line';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: props.router.pathname.replace(\"/quiz\", \"\").replace(\"/\", \"\"),\n      questions: [],\n      file: false,\n      lineTypes: lineTypes,\n      lines: []\n    };\n  }\n\n  componentDidMount() {\n    let lines = [];\n\n    if (localStorage && localStorage.getItem(this.state.course) === null) {\n      lines = [];\n      localStorage.setItem(this.state.course, JSON.stringify(lines));\n    } else {\n      lines = JSON.parse(localStorage.getItem(this.state.course));\n    }\n\n    this.setState({\n      lines: lines\n    });\n  }\n\n  render() {\n    const q = this.props.router.query.q ? this.props.router.query.q : 0;\n    const handleNewLine = this.handleNewLine.bind(this);\n    const update = this.update.bind(this);\n    const deleteLine = this.deleteLine.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Quiz | Youth Revelation Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          charset: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.save.bind(this),\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-file\",\n            children: \"import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"input-file\",\n            onChange: this.getFile.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(NewLineForm, {\n          index: 0,\n          handleNewLine: handleNewLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this), this.state.lines.map(function (line, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                color: \"red\",\n                marginLeft: \"15px\"\n              },\n              onClick: e => {\n                deleteLine(i);\n              },\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              index: i,\n              data: line,\n              update: update\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(NewLineForm, {\n              index: i + 1,\n              handleNewLine: handleNewLine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 2\n    }, this);\n  }\n\n  save() {\n    const txt = JSON.stringify(this.state.lines);\n    localStorage.setItem(this.state.course, txt); // Start file download.\n\n    this.download(this.state.course + \".json\", txt);\n  }\n\n  download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  getFile(event) {\n    const input = event.target;\n\n    if ('files' in input && input.files.length > 0) {\n      const lines = this.placeFileContent(input.files[0]).then(lines => {\n        this.setState({\n          lines: lines\n        });\n      });\n    }\n  }\n\n  placeFileContent(file) {\n    return this.readFileContent(file).then(content => {\n      return JSON.parse(content);\n    }).catch(error => console.log(error));\n  }\n\n  readFileContent(file) {\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsText(file);\n    });\n  }\n\n  handleNewLine(e) {\n    e.preventDefault();\n    const lineType = e.target.lineType.value;\n    const index = e.target.index.value;\n\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines.splice(index, 0, templates[lineType]);\n    this.setState(_objectSpread({}, newState));\n  }\n\n  update(line, data) {\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines[line] = _objectSpread({}, data);\n    this.setState(newState);\n  }\n\n  deleteLine(line) {\n    let newData = _objectSpread({}, this.state);\n\n    newData.lines.splice(line, 1);\n    this.setState(newData);\n  }\n\n}\n\nexport default withRouter(Course);\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n    */","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/revelation/quiz.js"],"names":["useState","Component","styles","Head","withRouter","Textbook","Navigation","Line","lineTypes","templates","Quiz","constructor","props","state","course","router","pathname","replace","questions","file","lines","componentDidMount","localStorage","getItem","setItem","JSON","stringify","parse","setState","render","q","query","handleNewLine","bind","update","deleteLine","save","getFile","map","line","i","color","marginLeft","e","txt","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","event","input","target","files","length","placeFileContent","then","readFileContent","content","catch","error","console","log","reader","FileReader","Promise","resolve","reject","onload","result","onerror","readAsText","preventDefault","lineType","value","index","newState","splice","data","newData","Course"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAOC,IAAP,IAAcC,SAAd,EAAyBC,SAAzB,QAAyC,gBAAzC;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAEF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsBC,OAAtB,CAA8B,OAA9B,EAAsC,EAAtC,EAA0CA,OAA1C,CAAkD,GAAlD,EAAsD,EAAtD,CADI;AAEZC,MAAAA,SAAS,EAAE,EAFC;AAGZC,MAAAA,IAAI,EAAC,KAHO;AAIZX,MAAAA,SAAS,EAAEA,SAJC;AAKZY,MAAAA,KAAK,EAAC;AALM,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAID,KAAK,GAAG,EAAZ;;AAEA,QAAGE,YAAY,IAAIA,YAAY,CAACC,OAAb,CAAqB,KAAKV,KAAL,CAAWC,MAAhC,MAA4C,IAA/D,EAAoE;AACnEM,MAAAA,KAAK,GAAG,EAAR;AACAE,MAAAA,YAAY,CAACE,OAAb,CAAqB,KAAKX,KAAL,CAAWC,MAAhC,EAAwCW,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAxC;AACA,KAHD,MAGK;AACJA,MAAAA,KAAK,GAAGK,IAAI,CAACE,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,KAAKV,KAAL,CAAWC,MAAhC,CAAX,CAAR;AACA;;AAED,SAAKc,QAAL,CAAc;AACbR,MAAAA,KAAK,EAAEA;AADM,KAAd;AAGH;;AAECS,EAAAA,MAAM,GAAG;AACN,UAAMC,CAAC,GAAG,KAAKlB,KAAL,CAAWG,MAAX,CAAkBgB,KAAlB,CAAwBD,CAAxB,GAA2B,KAAKlB,KAAL,CAAWG,MAAX,CAAkBgB,KAAlB,CAAwBD,CAAnD,GAAqD,CAA/D;AACA,UAAME,aAAa,GAAG,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAtB;AACA,UAAMC,MAAM,GAAG,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAf;AACA,UAAME,UAAU,GAAG,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAnB;AACD,wBACH;AAAA,8BACM,QAAC,IAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,GAAG,EAAC,MAAV;AAAiB,UAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,OAAO,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,eAOC;AAAA,gCAEA;AAAQ,UAAA,OAAO,EAAE,KAAKG,IAAL,CAAUH,IAAV,CAAe,IAAf,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAIA;AAAA,kCACC;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAC2C;AAAA;AAAA;AAAA;AAAA,kBAD3C,eAEC;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,YAAtB;AAAmC,YAAA,QAAQ,EAAE,KAAKI,OAAL,CAAaJ,IAAb,CAAkB,IAAlB;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eASE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE,CAApB;AAAuB,UAAA,aAAa,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,gBATF,EAWC,KAAKnB,KAAL,CAAWO,KAAX,CAAiBkB,GAAjB,CAAqB,UAASC,IAAT,EAAeC,CAAf,EAAiB;AACtC,8BAAO;AAAA,oCAAK;AAAQ,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAC,KAAP;AAAcC,gBAAAA,UAAU,EAAC;AAAzB,eAAf;AAAiD,cAAA,OAAO,EAAGC,CAAD,IAAK;AAC9DR,gBAAAA,UAAU,CAACK,CAAD,CAAV;AACD,eAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,eAEiB,QAAC,IAAD;AAAc,cAAA,KAAK,EAAEA,CAArB;AAAwB,cAAA,IAAI,EAAED,IAA9B;AAAoC,cAAA,MAAM,EAAEL;AAA5C,eAAWM,CAAX;AAAA;AAAA;AAAA;AAAA,oBAFjB,eAGI,QAAC,WAAD;AAAa,cAAA,KAAK,EAAEA,CAAC,GAAC,CAAtB;AAAyB,cAAA,aAAa,EAAER;AAAxC;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAIA,SALA,CAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eA2BA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cA3BA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG;AA+BD;;AAEHI,EAAAA,IAAI,GAAE;AACL,UAAMQ,GAAG,GAAGnB,IAAI,CAACC,SAAL,CAAe,KAAKb,KAAL,CAAWO,KAA1B,CAAZ;AACAE,IAAAA,YAAY,CAACE,OAAb,CAAqB,KAAKX,KAAL,CAAWC,MAAhC,EAAwC8B,GAAxC,EAFK,CAIL;;AACA,SAAKC,QAAL,CAAc,KAAKhC,KAAL,CAAWC,MAAX,GAAkB,OAAhC,EAAwC8B,GAAxC;AACA;;AAEDC,EAAAA,QAAQ,CAACC,QAAD,EAAWC,IAAX,EAAiB;AACvB,QAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACAF,IAAAA,OAAO,CAACG,YAAR,CAAqB,MAArB,EAA6B,mCAAmCC,kBAAkB,CAACL,IAAD,CAAlF;AACAC,IAAAA,OAAO,CAACG,YAAR,CAAqB,UAArB,EAAiCL,QAAjC;AAEAE,IAAAA,OAAO,CAACK,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAL,IAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,OAA1B;AAEAA,IAAAA,OAAO,CAACS,KAAR;AAEAR,IAAAA,QAAQ,CAACM,IAAT,CAAcG,WAAd,CAA0BV,OAA1B;AACD;;AAEDX,EAAAA,OAAO,CAACsB,KAAD,EAAQ;AACd,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAApB;;AACC,QAAI,WAAWD,KAAX,IAAoBA,KAAK,CAACE,KAAN,CAAYC,MAAZ,GAAqB,CAA7C,EAAgD;AAC/C,YAAM3C,KAAK,GAAG,KAAK4C,gBAAL,CAAsBJ,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAtB,EAAsCG,IAAtC,CAA4C7C,KAAD,IAAS;AACjE,aAAKQ,QAAL,CAAc;AAACR,UAAAA,KAAK,EAACA;AAAP,SAAd;AACA,OAFa,CAAd;AAIC;AACH;;AAED4C,EAAAA,gBAAgB,CAAC7C,IAAD,EAAO;AACtB,WAAO,KAAK+C,eAAL,CAAqB/C,IAArB,EAA2B8C,IAA3B,CAAgCE,OAAO,IAAI;AAChD,aAAO1C,IAAI,CAACE,KAAL,CAAWwC,OAAX,CAAP;AACA,KAFK,EAEHC,KAFG,CAEGC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFZ,CAAP;AAGA;;AAEDH,EAAAA,eAAe,CAAC/C,IAAD,EAAO;AACrB,UAAMqD,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCJ,MAAAA,MAAM,CAACK,MAAP,GAAgBlB,KAAK,IAAIgB,OAAO,CAAChB,KAAK,CAACE,MAAN,CAAaiB,MAAd,CAAhC;;AACAN,MAAAA,MAAM,CAACO,OAAP,GAAiBV,KAAK,IAAIO,MAAM,CAACP,KAAD,CAAhC;;AACAG,MAAAA,MAAM,CAACQ,UAAP,CAAkB7D,IAAlB;AACD,KAJM,CAAP;AAKD;;AAEDa,EAAAA,aAAa,CAACW,CAAD,EAAG;AACZA,IAAAA,CAAC,CAACsC,cAAF;AAEA,UAAMC,QAAQ,GAAGvC,CAAC,CAACkB,MAAF,CAASqB,QAAT,CAAkBC,KAAnC;AACA,UAAMC,KAAK,GAAGzC,CAAC,CAACkB,MAAF,CAASuB,KAAT,CAAeD,KAA7B;;AAEA,QAAIE,QAAQ,qBAAO,KAAKxE,KAAZ,CAAZ;;AACAwE,IAAAA,QAAQ,CAACjE,KAAT,CAAekE,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B,EAAgC3E,SAAS,CAACyE,QAAD,CAAzC;AACA,SAAKtD,QAAL,mBAAkByD,QAAlB;AACH;;AAGDnD,EAAAA,MAAM,CAACK,IAAD,EAAOgD,IAAP,EAAY;AACd,QAAIF,QAAQ,qBAAO,KAAKxE,KAAZ,CAAZ;;AACAwE,IAAAA,QAAQ,CAACjE,KAAT,CAAemB,IAAf,sBAA2BgD,IAA3B;AACA,SAAK3D,QAAL,CAAcyD,QAAd;AACH;;AAEDlD,EAAAA,UAAU,CAACI,IAAD,EAAM;AACZ,QAAIiD,OAAO,qBAAO,KAAK3E,KAAZ,CAAX;;AACA2E,IAAAA,OAAO,CAACpE,KAAR,CAAckE,MAAd,CAAqB/C,IAArB,EAA2B,CAA3B;AACA,SAAKX,QAAL,CAAc4D,OAAd;AACH;;AArI4B;;AAwI7B,eAAepF,UAAU,CAACqF,MAAD,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState, Component } from 'react'\r\nimport styles from '../../styles/Revelation.module.css'\r\nimport Head from 'next/head'\r\nimport { withRouter } from \"next/router\"\r\nimport Textbook from './textbook'\r\nimport Navigation from './navigation'\r\n\r\nimport Line, {lineTypes, templates} from '../Blocks/Line'\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tcourse: props.router.pathname.replace(\"/quiz\",\"\").replace(\"/\",\"\"),\r\n    \tquestions: [],\r\n    \tfile:false,\r\n    \tlineTypes: lineTypes,\r\n    \tlines:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let lines = []\r\n\r\n    if(localStorage && localStorage.getItem(this.state.course) === null){\r\n   \t\tlines = [];\r\n    \tlocalStorage.setItem(this.state.course, JSON.stringify(lines));\r\n    }else{\r\n    \tlines = JSON.parse(localStorage.getItem(this.state.course));\r\n    }\r\n\r\n    this.setState({\r\n    \tlines: lines\r\n    })\r\n}\r\n\r\n  render() {\r\n  \t  const q = this.props.router.query.q? this.props.router.query.q:0\r\n  \t  const handleNewLine = this.handleNewLine.bind(this)\r\n  \t  const update = this.update.bind(this)\r\n  \t  const deleteLine = this.deleteLine.bind(this)\r\n    return (\r\n\t<div>\r\n\t      <Head>\r\n\t        <title>Quiz | Youth Revelation Study</title>\r\n\t        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n\t        <meta charset=\"UTF-8\" />\r\n\t      </Head>\r\n\r\n\t\t<main>\r\n\t    \r\n\t\t<button onClick={this.save.bind(this)}>SAVE</button>\r\n\r\n\t\t<div>\r\n\t\t <label htmlFor=\"input-file\">import</label><br/>\r\n\t\t <input type=\"file\" id=\"input-file\" onChange={this.getFile.bind(this)} />\r\n\t\t</div>\r\n\r\n    <NewLineForm index={0} handleNewLine={handleNewLine}/>\r\n\r\n\t\t{this.state.lines.map(function(line, i){\r\n\t\t\treturn <div><button style={{color:\"red\", marginLeft:\"15px\"}} onClick={(e)=>{\r\n                deleteLine(i)\r\n              }}>x</button><Line key={i} index={i} data={line} update={update} />\r\n              <NewLineForm index={i+1} handleNewLine={handleNewLine}/></div>\r\n\t\t})}\r\n\r\n\t\t</main>\r\n\r\n\t<Navigation />\r\n</div>\r\n    );\r\n  }\r\n\r\nsave(){\r\n\tconst txt = JSON.stringify(this.state.lines)\r\n\tlocalStorage.setItem(this.state.course, txt)\r\n\r\n\t// Start file download.\r\n\tthis.download(this.state.course+\".json\",txt);\r\n}\r\n\r\ndownload(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\ngetFile(event) {\r\n\tconst input = event.target\r\n  if ('files' in input && input.files.length > 0) {\r\n\t  const lines = this.placeFileContent(input.files[0]).then((lines)=>{\r\n\t  \tthis.setState({lines:lines})\r\n\t  })\r\n\r\n  \t}\r\n}\r\n\r\nplaceFileContent(file) {\r\n\treturn this.readFileContent(file).then(content => {\r\n  \treturn JSON.parse(content)\r\n  }).catch(error => console.log(error))\r\n}\r\n\r\nreadFileContent(file) {\r\n\tconst reader = new FileReader()\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = event => resolve(event.target.result)\r\n    reader.onerror = error => reject(error)\r\n    reader.readAsText(file)\r\n  })\r\n}\r\n\r\nhandleNewLine(e){\r\n    e.preventDefault();\r\n\r\n    const lineType = e.target.lineType.value\r\n    const index = e.target.index.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines.splice(index, 0, templates[lineType])\r\n    this.setState({...newState})\r\n}\r\n\r\n\r\nupdate(line, data){\r\n    let newState = {...this.state}\r\n    newState.lines[line] = {...data}\r\n    this.setState(newState)\r\n}\r\n\r\ndeleteLine(line){\r\n    let newData = {...this.state}\r\n    newData.lines.splice(line, 1);\r\n    this.setState(newData)\r\n}\r\n\r\n}\r\nexport default withRouter(Course)\r\n\r\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n    */"]},"metadata":{},"sourceType":"module"}