{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\revelation\\\\quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Component } from 'react';\nimport styles from '../../styles/Revelation.module.css';\nimport Head from 'next/head';\nimport { withRouter } from \"next/router\";\nimport Textbook from './textbook';\nimport Navigation from './navigation';\n\nfunction Quiz({\n  line,\n  questions,\n  updateQuestion,\n  addQuestionProp\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      children: questions.map(function (q, i) {\n        const keys = Object.keys(q);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [keys.map(function (k) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"questions \" + styles[k],\n                type: \"text\",\n                onChange: e => {\n                  updateQuestion(line, k, i, e.target.value);\n                },\n                value: q[k]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.questionLabel,\n                children: k\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  color: \"red\",\n                  marginLeft: \"15px\"\n                },\n                onClick: e => {\n                  updateQuestion(line, k, i, \"delete\");\n                },\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 16\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: addQuestionProp,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"line\",\n              value: line\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"index\",\n              value: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"prop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"val\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 10\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function (e) {\n        updateQuestion(line);\n      },\n      children: \"add new question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction Line(props) {\n  switch (props.type) {\n    case \"\":\n      break;\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(props)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n  }\n}\n\nclass Course extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: props.router.pathname.replace(\"/quiz\", \"\").replace(\"/\", \"\"),\n      questions: [],\n      file: false,\n      lineTypes: [\"h1\", \"h2\", \"p\", \"blockquote\", \"quiz\"],\n      lines: []\n    };\n  }\n\n  componentDidMount() {\n    let questions = [];\n\n    if (localStorage && localStorage.getItem('questions') === null) {\n      questions = [{\n        q: \"According to chapter 1, this book is a revelation of Whom?\",\n        a: \"Jesus Christ\",\n        ref: 66001001\n      }, {\n        q: \"\",\n        a: \"\",\n        ref: \"\"\n      }];\n      localStorage.setItem('questions', JSON.stringify(questions));\n    } else {\n      questions = JSON.parse(localStorage.getItem('questions'));\n    }\n\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const q = this.props.router.query.q ? this.props.router.query.q : 0;\n    const updateQuestion = this.updateQuestion.bind(this);\n    const addQuestionProp = this.addQuestionProp.bind(this);\n    const handleNewLine = this.handleNewLine.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Quiz | Youth Revelation Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          charset: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveQuestions.bind(this),\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-file\",\n            children: \"import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"input-file\",\n            onChange: this.getFile.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 3\n        }, this), this.state.lines.map(function (line) {\n          return /*#__PURE__*/_jsxDEV(Line, _objectSpread({}, line), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewLine,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"lineType\",\n              id: \"lineTypes\",\n              defaultValue: \"p\",\n              children: this.state.lineTypes.map(function (t) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: t,\n                  children: t\n                }, t, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 2\n    }, this);\n  }\n\n  updateQuestion(line, propName, index, value) {\n    let newQ = [...this.state.questions];\n\n    if (propName === undefined) {\n      newQ.push({\n        q: \"\",\n        a: \"\",\n        ref: \"\"\n      });\n    } else if (value = \"delete\") {\n      delete newQ[index][propName];\n    } else {\n      newQ[index][propName] = value;\n    }\n\n    this.setState({\n      questions: newQ\n    });\n  }\n\n  saveQuestions() {\n    const txt = JSON.stringify(this.state.questions);\n    localStorage.setItem('questions', txt); // Start file download.\n\n    this.download(this.state.course + \".json\", txt);\n  }\n\n  download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  getFile(event) {\n    const input = event.target;\n\n    if ('files' in input && input.files.length > 0) {\n      const questions = this.placeFileContent(input.files[0]).then(questions => {\n        console.log(questions);\n        this.setState({\n          questions: questions\n        });\n      });\n    }\n  }\n\n  placeFileContent(file) {\n    return this.readFileContent(file).then(content => {\n      return JSON.parse(content);\n    }).catch(error => console.log(error));\n  }\n\n  readFileContent(file) {\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsText(file);\n    });\n  }\n\n  addQuestionProp(e) {\n    e.preventDefault();\n    const line = e.target.line.value;\n    const index = e.target.index.value;\n    const prop = e.target.prop.value;\n    const val = e.target.val.value;\n\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines[line].questions[index][prop] = val;\n    this.setState(newState);\n  }\n\n  handleNewLine(e) {\n    e.preventDefault();\n    const lineType = e.target.lineType.value;\n\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines.push(this.template(lineType));\n    this.setState(newState);\n  }\n\n  template(lineType) {\n    switch (lineType) {\n      case 'quiz':\n        return {\n          title: \"TITLE\",\n          questions: [{\n            q: \"\",\n            a: \"\",\n            ref: \"\"\n          }]\n        };\n        break;\n\n      default:\n        return {\n          \"type\": \"p\",\n          \"value\": \"\"\n        };\n    }\n  }\n\n}\n\nexport default withRouter(Course);\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n    */","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/revelation/quiz.js"],"names":["useState","Component","styles","Head","withRouter","Textbook","Navigation","Quiz","line","questions","updateQuestion","addQuestionProp","map","q","i","keys","Object","k","e","target","value","questionLabel","color","marginLeft","Line","props","type","JSON","stringify","Course","constructor","state","course","router","pathname","replace","file","lineTypes","lines","componentDidMount","localStorage","getItem","a","ref","setItem","parse","setState","render","query","bind","handleNewLine","saveQuestions","getFile","t","propName","index","newQ","undefined","push","txt","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","event","input","files","length","placeFileContent","then","console","log","readFileContent","content","catch","error","reader","FileReader","Promise","resolve","reject","onload","result","onerror","readAsText","preventDefault","prop","val","newState","lineType","template","title"],"mappings":"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","sourcesContent":["import { useState, Component } from 'react'\r\nimport styles from '../../styles/Revelation.module.css'\r\nimport Head from 'next/head'\r\nimport { withRouter } from \"next/router\"\r\nimport Textbook from './textbook'\r\nimport Navigation from './navigation'\r\n\r\nfunction Quiz({line, questions, updateQuestion, addQuestionProp}){\r\n\treturn (<><ol>\r\n\t    {questions.map(function(q,i){\r\n\r\n\t    \tconst keys = Object.keys(q)\r\n\t    \treturn <li key={i}>\r\n\r\n\t    \t\t{keys.map(function(k){\r\n\t    \t\t\treturn <div><textarea className={\"questions \" + styles[k]} type=\"text\" onChange={\r\n\t\t\t    \t\t(e)=>{\r\n\t\t\t    \t\t\tupdateQuestion(line,k,i,e.target.value)\r\n\t\t\t    \t\t}} value={q[k]}></textarea><span className={styles.questionLabel}>{k}</span>\r\n\r\n\t\t\t    \t\t<button style={{color:\"red\", marginLeft:\"15px\"}} onClick={(e)=>{\r\n\t\t\t    \t\t\tupdateQuestion(line, k,i,\"delete\")\r\n\t\t\t    \t\t}}>x</button>\r\n\t    \t\t</div>\r\n\t    \t\t})}\r\n\r\n\t    \t\t   <form onSubmit={addQuestionProp}>\r\n\t    \t\t   <input type=\"hidden\" name=\"line\" value={line} />\r\n\t    \t\t   \t<input type=\"hidden\" name=\"index\" value={i} />\r\n\t\t\t        <label>\r\n\t\t\t          Key:\r\n\t\t\t          <input type=\"text\" name=\"prop\" />\r\n\t\t\t        </label>\r\n\t\t\t  \t\t<label>\r\n\t\t\t          Value:\r\n\t\t\t          <input type=\"text\" name=\"val\"/>\r\n\t\t\t        </label>\r\n\t\t\t        <input type=\"submit\" value=\"+\" />\r\n\t\t\t      </form>\r\n\r\n\t\t\t      <hr/>\r\n\t    \t\t</li>\r\n\t    })}\r\n\t    </ol>\r\n\r\n\t    \t<button onClick={function(e){\r\n\t    \t\tupdateQuestion(line)\r\n\t    \t}}>add new question</button>\r\n\t    \t</>)\r\n\t    }\r\n\r\nfunction Line(props){\r\n\tswitch(props.type){\r\n\r\n\t\tcase \"\":\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\treturn <div>{JSON.stringify(props)}</div>\r\n\t}\r\n}\r\n\r\nclass Course extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tcourse: props.router.pathname.replace(\"/quiz\",\"\").replace(\"/\",\"\"),\r\n    \tquestions: [],\r\n    \tfile:false,\r\n    \tlineTypes:[\"h1\",\"h2\",\"p\",\"blockquote\",\"quiz\"],\r\n    \tlines:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let questions = []\r\n\r\n    if(localStorage && localStorage.getItem('questions') === null){\r\n   \t\tquestions = [\r\n\t\t{q:\"According to chapter 1, this book is a revelation of Whom?\",a:\"Jesus Christ\", ref:66001001},\r\n\t\t{q:\"\",a:\"\", ref:\"\"}\r\n\t\t];\r\n    \tlocalStorage.setItem('questions', JSON.stringify(questions));\r\n    }else{\r\n    \tquestions = JSON.parse(localStorage.getItem('questions'));\r\n    }\r\n\r\n    this.setState({\r\n    \tquestions: questions\r\n    })\r\n}\r\n\r\n  render() {\r\n  \t  const q = this.props.router.query.q? this.props.router.query.q:0\r\n  \t  const updateQuestion = this.updateQuestion.bind(this)\r\n  \t  const addQuestionProp = this.addQuestionProp.bind(this)\r\n  \t  const handleNewLine = this.handleNewLine.bind(this)\r\n    return (\r\n\t<div>\r\n\t      <Head>\r\n\t        <title>Quiz | Youth Revelation Study</title>\r\n\t        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n\t        <meta charset=\"UTF-8\" />\r\n\t      </Head>\r\n\r\n\t\t<main>\r\n\t    \r\n\t\t<button onClick={this.saveQuestions.bind(this)}>SAVE</button>\r\n\r\n\t\t<div>\r\n\t\t <label htmlFor=\"input-file\">import</label><br/>\r\n\t\t <input type=\"file\" id=\"input-file\" onChange={this.getFile.bind(this)} />\r\n\t\t</div>\r\n\r\n\t\t{this.state.lines.map(function(line){\r\n\t\t\treturn <Line {...line} />\r\n\t\t})}\r\n\r\n\r\n\t    \t\t   <form onSubmit={handleNewLine}>\r\n\t    \t\t   \t<input type=\"hidden\" name=\"index\" />\r\n\t\t\t        <label>\r\n\t\t\t          <select name=\"lineType\" id=\"lineTypes\" defaultValue=\"p\">\r\n\t\t\t          \t{this.state.lineTypes.map(function(t){\r\n\t\t\t          \t\treturn <option key={t} value={t}>{t}</option>\r\n\t\t\t          \t})}\r\n\t\t\t\t\t  \r\n\r\n\t\t\t\t\t</select>\r\n\t\t\t        </label>\r\n\r\n\t\t\t        <input type=\"submit\" value=\"+\" />\r\n\t\t\t      </form>\r\n\r\n\r\n\t\t</main>\r\n\r\n\t<Navigation />\r\n</div>\r\n    );\r\n  }\r\n\r\n  updateQuestion(line, propName, index, value){\r\n\r\n  \tlet newQ = [...this.state.questions]\r\n\r\n  \tif(propName === undefined){\r\n  \t\tnewQ.push({q:\"\",a:\"\", ref:\"\"})\r\n  \t}else if(value = \"delete\"){\r\n  \t\tdelete newQ[index][propName];\r\n  \t}else{\r\n  \t\tnewQ[index][propName] = value\r\n  \t}\r\n  \t\r\n  \tthis.setState({\r\n\t  questions: newQ\r\n\t})\r\n  }\r\n\r\n\r\nsaveQuestions(){\r\n\tconst txt = JSON.stringify(this.state.questions)\r\n\tlocalStorage.setItem('questions', txt)\r\n\r\n\t// Start file download.\r\n\tthis.download(this.state.course+\".json\",txt);\r\n}\r\n\r\ndownload(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\ngetFile(event) {\r\n\tconst input = event.target\r\n  if ('files' in input && input.files.length > 0) {\r\n\t  const questions = this.placeFileContent(input.files[0]).then((questions)=>{\r\n\t \tconsole.log(questions)\r\n\t  \tthis.setState({questions:questions})\r\n\t  })\r\n\r\n  \t}\r\n}\r\n\r\nplaceFileContent(file) {\r\n\treturn this.readFileContent(file).then(content => {\r\n  \treturn JSON.parse(content)\r\n  }).catch(error => console.log(error))\r\n}\r\n\r\nreadFileContent(file) {\r\n\tconst reader = new FileReader()\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = event => resolve(event.target.result)\r\n    reader.onerror = error => reject(error)\r\n    reader.readAsText(file)\r\n  })\r\n}\r\n\r\naddQuestionProp(e){\r\n    e.preventDefault();\r\n    const line = e.target.line.value\r\n    const index = e.target.index.value\r\n    const prop = e.target.prop.value\r\n    const val = e.target.val.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines[line].questions[index][prop] = val\r\n    this.setState(newState)\r\n}\r\n\r\nhandleNewLine(e){\r\n    e.preventDefault();\r\n    const lineType = e.target.lineType.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines.push(this.template(lineType))\r\n    this.setState(newState)\r\n}\r\n\r\ntemplate(lineType){\r\n\tswitch (lineType){\r\n\r\n\t\tcase 'quiz':\r\n\t\t\treturn { title:\"TITLE\", questions:[{q:\"\",a:\"\", ref:\"\"}]}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\r\n\t\t\treturn {\"type\":\"p\",\"value\":\"\"}\r\n\t}\r\n}\r\n\r\n}\r\nexport default withRouter(Course)\r\n\r\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n    */"]},"metadata":{},"sourceType":"module"}