{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\Blocks\\\\Markdown.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Markdown(props) {\n  const {\n    data,\n    update,\n    index,\n    read\n  } = props;\n\n  if (read) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 10\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"p\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: data.value,\n          onChange: e => {\n            let l = _objectSpread({}, data);\n\n            l.value = e.target.value;\n            update(index, l);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true);\n  }\n}\n\nexport const markdownTemplate = {\n  type: \"md\",\n  value: \"\"\n};\nexport default Markdown;","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/Blocks/Markdown.js"],"names":["Markdown","props","data","update","index","read","value","e","l","target","markdownTemplate","type"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,CAAkBC,KAAlB,EAAwB;AAEvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAgCJ,KAAtC;;AAEA,MAAGI,IAAH,EAAQ;AACP,wBAAO;AAAA,gBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GAFD,MAEK;AACL,wBAAQ;AAAA,8BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,eAAgB;AAAA,+BAAG;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEJ,IAAI,CAACI,KAA/B;AAAsC,UAAA,QAAQ,EAAGC,CAAD,IAAK;AAC/E,gBAAIC,CAAC,qBAAON,IAAP,CAAL;;AACAM,YAAAA,CAAC,CAACF,KAAF,GAAUC,CAAC,CAACE,MAAF,CAASH,KAAnB;AACAH,YAAAA,MAAM,CAACC,KAAD,EAAQI,CAAR,CAAN;AACA;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA,oBAAR;AAKA;AACA;;AAGD,OAAO,MAAME,gBAAgB,GAAG;AAAEC,EAAAA,IAAI,EAAC,IAAP;AAAaL,EAAAA,KAAK,EAAC;AAAnB,CAAzB;AACP,eAAeN,QAAf","sourcesContent":["function Markdown(props){\r\n\r\n\tconst { data, update, index, read } = props\r\n\r\n\tif(read){\r\n\t\treturn <p>{data.value}</p>\r\n\t}else{\r\n\treturn (<><span>p</span><p><input type=\"text\" value={data.value} onChange={(e)=>{\r\n\t\tlet l = {...data}\r\n\t\tl.value = e.target.value\r\n\t\tupdate(index, l)\r\n\t}}/></p></>)\r\n}\r\n}\r\n\r\n\r\nexport const markdownTemplate = { type:\"md\", value:\"\" }\r\nexport default Markdown;"]},"metadata":{},"sourceType":"module"}