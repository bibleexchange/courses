{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\shed.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nconst data = {\n  sheds: [{\n    id: 'reynolds-example',\n    deck: {\n      floor: 'advantech',\n      width: 96,\n      length: 144,\n      insulate: false\n    },\n    walls: {\n      a: {\n        length: 144,\n        stud: 72,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'door',\n          style: 'vinyl',\n          width: 61.75,\n          height: 72.5,\n          position: 0,\n          ramp: {\n            width: 52,\n            length: 60\n          }\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      b: {\n        length: 96,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      c: {\n        length: 144,\n        loft: {\n          width: 36,\n          length: 96\n        }\n      },\n      d: {\n        length: 96\n      },\n      insulate: false,\n      electrical: false\n    },\n    roof: {\n      type: 'gable',\n      insulate: false\n    },\n    siding: {\n      type: 'vinyl',\n      color: 'white'\n    },\n    roof: {\n      type: 'shingle',\n      color: 'black',\n      vent: 'gable'\n    }\n  }]\n};\n\nfunction getOpenings(wall) {\n  let space = {\n    empty: 0,\n    solid: wall.length,\n    spacing: 0\n  };\n  wall.openings && wall.openings.map(function (o) {\n    space.empty = space.empty + o.width;\n    space.solid = space.solid - o.width;\n  });\n  space.spacing = wall.openings && space.solid / (wall.openings.length + 1);\n  return space;\n}\n\nfunction Opening(walls, o, i) {\n  let position = 0;\n  let spacing = getOpenings(walls.a).spacing;\n\n  switch (i) {\n    case 0:\n      position = spacing;\n      break;\n\n    case 1:\n      position = spacing + props.walls.a.openings[0].width + spacing;\n      break;\n\n    case 2:\n      position = spacing + props.walls.a.openings[0].width + spacing + props.walls.a.openings[1].width + spacing;\n      break;\n  }\n\n  let text = \"W\";\n\n  if (o.type === \"door\") {\n    text = \"D\";\n  }\n\n  let textposition = 0;\n\n  if (o.width > 40) {\n    textposition = position + position * .6;\n  } else {\n    textposition = position + 1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: position,\n      y: props.walls.b.length - opts.wallSize,\n      height: opts.wallSize,\n      width: o.width,\n      stroke: \"gray\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: textposition,\n      y: props.walls.b.length,\n      fill: \"red\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nconst FloorPlan = function (props) {\n  const opts = {\n    strokeWidth: 1,\n    wallSize: 6\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: props.walls.width,\n    width: props.walls.length,\n    viewBox: \"0 0 \" + props.walls.width + \" \" + props.walls.length,\n    \"stroke-width\": opts.strokeWidth,\n    \"stroke-alignment\": \"inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: opts.wallSize,\n      y: props.walls.b.length - opts.wallSize,\n      height: opts.wallSize,\n      width: props.walls.a.length - opts.wallSize * 2,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }, this), props.walls.a.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        walls: props.walls,\n        o: o,\n        index: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: 0,\n      height: props.walls.b.length,\n      width: opts.wallSize,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: opts.wallSize,\n      y: 0,\n      height: opts.wallSize,\n      width: props.walls.c.length - opts.wallSize * 2,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: props.walls.a.length - opts.wallSize,\n      y: 0,\n      height: props.walls.d.length,\n      width: opts.wallSize,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 11\n  }, this);\n};\n\nexport default function Shed() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Shed Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Shed Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: \"Work Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.grid,\n        children: data.sheds.map(function (shed) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.card,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: shed.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [shed.walls.b.length / 12, \"' x \", shed.walls.a.length / 12, \"'\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FloorPlan, _objectSpread({}, shed), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer,\n      children: \"Created by Stephen Reynolds, Jr.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/shed.js"],"names":["Head","styles","data","sheds","id","deck","floor","width","length","insulate","walls","a","stud","openings","type","style","height","top","trim","box","shutters","position","ramp","b","c","loft","d","electrical","roof","siding","color","vent","getOpenings","wall","space","empty","solid","spacing","map","o","Opening","i","props","text","textposition","opts","wallSize","FloorPlan","strokeWidth","Shed","container","main","title","description","grid","shed","card","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\n\nconst data = {\n  sheds : [\n    {\n      id:'reynolds-example',\n      deck:{\n        floor:'advantech',\n        width:96,\n        length:144,\n        insulate: false\n      },\n      walls:{\n        a: {\n        length:144,\n        stud:72,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'door', style:'vinyl', width: 61.75, height:72.5, position: 0, ramp:{width:52, length:60}},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ]\n        },\n        b: {\n          length:96,        \n          openings:[\n            {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n          ]},\n        c:{length:144, loft:{width:36, length: 96}},\n        d:{length:96},\n        insulate: false,\n        electrical: false\n      },\n      roof: {\n        type:'gable',\n        insulate:false\n      },\n      siding: {\n        type:'vinyl',\n        color:'white'\n      },\n      roof:{\n        type: 'shingle',\n        color: 'black',\n        vent: 'gable'\n      }\n    \n    }\n  ]\n}\n\nfunction getOpenings(wall){\n    let space = {\n      empty: 0,\n      solid: wall.length,\n      spacing: 0\n    };\n\n    wall.openings && wall.openings.map(function(o){\n      space.empty = space.empty + o.width\n      space.solid = space.solid-o.width\n    }) \n\n    space.spacing = wall.openings && space.solid/(wall.openings.length+1)\n\n    return space\n    }\n\nfunction Opening(walls,o,i){\n\n    let position = 0\n    let spacing = getOpenings(walls.a).spacing\n\n      switch(i){\n\n        case 0:\n          position = spacing\n          break;\n\n        case 1:\n          position = spacing + props.walls.a.openings[0].width + spacing\n          break;\n\n        case 2:\n          position = spacing + props.walls.a.openings[0].width + spacing + props.walls.a.openings[1].width+ spacing\n          break;\n      }\n\n      let text = \"W\"\n\n      if(o.type === \"door\"){\n        text = \"D\"\n      }\n\n      let textposition = 0\n\n      if(o.width > 40){\n        textposition = position + (position * .6)\n      }else{\n        textposition = position + 1\n      }\n\n      return (<>\n      <rect x={position} y={props.walls.b.length-opts.wallSize} height={opts.wallSize} width={o.width} stroke=\"gray\" fill=\"white\"/>\n      <text x={textposition} y={props.walls.b.length} fill=\"red\">{text}</text></>)\n}\n\nconst FloorPlan = function(props) {\n\n  const opts = {\n    strokeWidth:1,\n    wallSize: 6\n  }\n\n\n  return (<svg height={props.walls.width} width={props.walls.length} viewBox={\"0 0 \"+ props.walls.width + \" \" + props.walls.length} \n    stroke-width={opts.strokeWidth}\n    stroke-alignment=\"inner\"\n    >\n\n     <rect x={opts.wallSize} y={props.walls.b.length-opts.wallSize} height={opts.wallSize} width={props.walls.a.length-(opts.wallSize*2)} stroke=\"black\" fill=\"black\"/>\n\n     {props.walls.a.openings.map(function(o,i){\n        return <Opening walls={props.walls} o={o} index={i} />\n     })}\n\n     <rect x=\"0\" y={0} height={props.walls.b.length} width={opts.wallSize} stroke=\"black\" fill=\"black\"/>\n\n     <rect x={opts.wallSize} y={0} height={opts.wallSize} width={props.walls.c.length-(opts.wallSize*2)} stroke=\"black\" fill=\"black\"/>\n\n     <rect x={props.walls.a.length-(opts.wallSize)} y={0} height={props.walls.d.length} width={opts.wallSize} stroke=\"black\" fill=\"black\"/>\n\n  </svg>)\n}\n\nexport default function Shed() {\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Shed Assistant</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main className={styles.main}>\n        <h1 className={styles.title}>\n          Shed Assistant\n        </h1>\n\n        <p className={styles.description}>\n          Work Orders\n        </p>\n\n        <div className={styles.grid}>\n\n          {\n            data.sheds.map(function(shed){\n              return (          \n              <div className={styles.card}>\n                <h3>{shed.id}</h3>\n                <p>{shed.walls.b.length/12}' x {shed.walls.a.length/12}'</p>\n                <hr/>\n                <FloorPlan {...shed}/>\n\n              </div>\n          )\n            })\n          }\n\n\n\n        </div>\n      </main>\n\n      <footer className={styles.footer}>\n        Created by Stephen Reynolds, Jr.\n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}