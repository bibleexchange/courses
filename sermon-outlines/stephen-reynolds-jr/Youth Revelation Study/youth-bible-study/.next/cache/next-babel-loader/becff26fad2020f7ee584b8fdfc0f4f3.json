{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\revelation\\\\quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { useState, Component } from 'react';\nimport styles from '../../styles/Revelation.module.css';\nimport Head from 'next/head';\nimport { withRouter } from \"next/router\";\nimport Textbook from './textbook';\nimport Navigation from './navigation';\n\nfunction Quiz(_ref) {\n  var line = _ref.line,\n      questions = _ref.questions,\n      updateQuestion = _ref.updateQuestion,\n      addQuestionProp = _ref.addQuestionProp;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      children: questions.map(function (q, i) {\n        var keys = Object.keys(q);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [keys.map(function (k) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"questions \" + styles[k],\n                type: \"text\",\n                onChange: function onChange(e) {\n                  updateQuestion(k, i, e.target.value);\n                },\n                value: q[k]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.questionLabel,\n                children: k\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  color: \"red\",\n                  marginLeft: \"15px\"\n                },\n                onClick: function onClick(e) {\n                  updateQuestion(k, i, \"delete\");\n                },\n                children: \"x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 16\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: addQuestionProp,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"line\",\n              value: line\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"index\",\n              value: i\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"prop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"val\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 10\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick(e) {\n        updateQuestion(line);\n      },\n      children: \"add new question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Quiz;\n\nvar Course = /*#__PURE__*/function (_Component) {\n  _inherits(Course, _Component);\n\n  var _super = _createSuper(Course);\n\n  function Course(props) {\n    var _this;\n\n    _classCallCheck(this, Course);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      course: props.router.pathname.replace(\"/quiz\", \"\").replace(\"/\", \"\"),\n      questions: [],\n      file: false,\n      lineTypes: [\"h1\", \"h2\", \"p\", \"blockquote\", \"quiz\"],\n      lines: []\n    };\n    return _this;\n  }\n\n  _createClass(Course, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var questions = [];\n\n      if (localStorage && localStorage.getItem('questions') === null) {\n        questions = [{\n          q: \"According to chapter 1, this book is a revelation of Whom?\",\n          a: \"Jesus Christ\",\n          ref: 66001001\n        }, {\n          q: \"\",\n          a: \"\",\n          ref: \"\"\n        }];\n        localStorage.setItem('questions', JSON.stringify(questions));\n      } else {\n        questions = JSON.parse(localStorage.getItem('questions'));\n      }\n\n      this.setState({\n        questions: questions\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var q = this.props.router.query.q ? this.props.router.query.q : 0;\n      var updateQuestion = this.updateQuestion.bind(this);\n      var addQuestionProp = this.addQuestionProp.bind(this);\n      var handleNewLine = this.handleNewLine.bind(this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Head, {\n          children: [/*#__PURE__*/_jsxDEV(\"title\", {\n            children: \"Quiz | Youth Revelation Study\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n            rel: \"icon\",\n            href: \"/favicon.ico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n            charset: \"UTF-8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.saveQuestions.bind(this),\n            children: \"SAVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"input-file\",\n              children: \"import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 4\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"input-file\",\n              onChange: this.getFile.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n            line: 1,\n            questions: this.state.questions,\n            updateQuestion: updateQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleNewLine,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              name: \"index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"lineType\",\n                id: \"lineTypes\",\n                defaultValue: \"p\",\n                children: this.state.lineTypes.map(function (t) {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: t,\n                    children: t\n                  }, t, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 2\n      }, this);\n    }\n  }, {\n    key: \"updateQuestion\",\n    value: function updateQuestion(line, propName, index, value) {\n      var newQ = _toConsumableArray(this.state.questions);\n\n      if (propName === undefined) {\n        newQ.push({\n          q: \"\",\n          a: \"\",\n          ref: \"\"\n        });\n      } else if (value = \"delete\") {\n        delete newQ[index][propName];\n      } else {\n        newQ[index][propName] = value;\n      }\n\n      this.setState({\n        questions: newQ\n      });\n    }\n  }, {\n    key: \"saveQuestions\",\n    value: function saveQuestions() {\n      var txt = JSON.stringify(this.state.questions);\n      localStorage.setItem('questions', txt); // Start file download.\n\n      this.download(this.state.course + \".json\", txt);\n    }\n  }, {\n    key: \"download\",\n    value: function download(filename, text) {\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n  }, {\n    key: \"getFile\",\n    value: function getFile(event) {\n      var _this2 = this;\n\n      var input = event.target;\n\n      if ('files' in input && input.files.length > 0) {\n        var questions = this.placeFileContent(input.files[0]).then(function (questions) {\n          console.log(questions);\n\n          _this2.setState({\n            questions: questions\n          });\n        });\n      }\n    }\n  }, {\n    key: \"placeFileContent\",\n    value: function placeFileContent(file) {\n      return this.readFileContent(file).then(function (content) {\n        return JSON.parse(content);\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"readFileContent\",\n    value: function readFileContent(file) {\n      var reader = new FileReader();\n      return new Promise(function (resolve, reject) {\n        reader.onload = function (event) {\n          return resolve(event.target.result);\n        };\n\n        reader.onerror = function (error) {\n          return reject(error);\n        };\n\n        reader.readAsText(file);\n      });\n    }\n  }, {\n    key: \"addQuestionProp\",\n    value: function addQuestionProp(e) {\n      e.preventDefault();\n      var line = e.target.line.value;\n      var index = e.target.index.value;\n      var prop = e.target.prop.value;\n      var val = e.target.val.value;\n\n      var newState = _objectSpread({}, this.state);\n\n      newState.lines[line].questions[index][prop] = val;\n      this.setState(newState);\n    }\n  }, {\n    key: \"handleNewLine\",\n    value: function handleNewLine(e) {\n      e.preventDefault();\n      var lineType = e.target.lineType.value;\n\n      var newState = _objectSpread({}, this.state);\n\n      newState.lines.push(this.template(lineType));\n      this.setState(newState);\n    }\n  }, {\n    key: \"template\",\n    value: function template(lineType) {\n      switch (lineType) {\n        case 'quiz':\n          return {\n            title: \"TITLE\",\n            questions: [{\n              q: \"\",\n              a: \"\",\n              ref: \"\"\n            }]\n          };\n          break;\n\n        default:\n          return {\n            \"type\": \"p\",\n            \"value\": \"\"\n          };\n      }\n    }\n  }]);\n\n  return Course;\n}(Component);\n\nexport default _c2 = withRouter(Course);\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n    */\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Quiz\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/revelation/quiz.js"],"names":["useState","Component","styles","Head","withRouter","Textbook","Navigation","Quiz","line","questions","updateQuestion","addQuestionProp","map","q","i","keys","Object","k","e","target","value","questionLabel","color","marginLeft","Course","props","state","course","router","pathname","replace","file","lineTypes","lines","localStorage","getItem","a","ref","setItem","JSON","stringify","parse","setState","query","bind","handleNewLine","saveQuestions","getFile","t","propName","index","newQ","undefined","push","txt","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","event","input","files","length","placeFileContent","then","console","log","readFileContent","content","error","reader","FileReader","Promise","resolve","reject","onload","result","onerror","readAsText","preventDefault","prop","val","newState","lineType","template","title"],"mappings":"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","sourcesContent":["import { useState, Component } from 'react'\r\nimport styles from '../../styles/Revelation.module.css'\r\nimport Head from 'next/head'\r\nimport { withRouter } from \"next/router\"\r\nimport Textbook from './textbook'\r\nimport Navigation from './navigation'\r\n\r\nfunction Quiz({line, questions, updateQuestion, addQuestionProp}){\r\n\treturn (<><ol>\r\n\t    {questions.map(function(q,i){\r\n\r\n\t    \tconst keys = Object.keys(q)\r\n\t    \treturn <li key={i}>\r\n\r\n\t    \t\t{keys.map(function(k){\r\n\t    \t\t\treturn <div><textarea className={\"questions \" + styles[k]} type=\"text\" onChange={\r\n\t\t\t    \t\t(e)=>{\r\n\t\t\t    \t\t\tupdateQuestion(k,i,e.target.value)\r\n\t\t\t    \t\t}} value={q[k]}></textarea><span className={styles.questionLabel}>{k}</span>\r\n\r\n\t\t\t    \t\t<button style={{color:\"red\", marginLeft:\"15px\"}} onClick={(e)=>{\r\n\t\t\t    \t\t\tupdateQuestion(k,i,\"delete\")\r\n\t\t\t    \t\t}}>x</button>\r\n\t    \t\t</div>\r\n\t    \t\t})}\r\n\r\n\t    \t\t   <form onSubmit={addQuestionProp}>\r\n\t    \t\t   <input type=\"hidden\" name=\"line\" value={line} />\r\n\t    \t\t   \t<input type=\"hidden\" name=\"index\" value={i} />\r\n\t\t\t        <label>\r\n\t\t\t          Key:\r\n\t\t\t          <input type=\"text\" name=\"prop\" />\r\n\t\t\t        </label>\r\n\t\t\t  \t\t<label>\r\n\t\t\t          Value:\r\n\t\t\t          <input type=\"text\" name=\"val\"/>\r\n\t\t\t        </label>\r\n\t\t\t        <input type=\"submit\" value=\"+\" />\r\n\t\t\t      </form>\r\n\r\n\t\t\t      <hr/>\r\n\t    \t\t</li>\r\n\t    })}\r\n\t    </ol>\r\n\r\n\t    \t<button onClick={function(e){\r\n\t    \t\tupdateQuestion(line)\r\n\t    \t}}>add new question</button>\r\n\t    \t</>)\r\n\t    }\r\n\r\nclass Course extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tcourse: props.router.pathname.replace(\"/quiz\",\"\").replace(\"/\",\"\"),\r\n    \tquestions: [],\r\n    \tfile:false,\r\n    \tlineTypes:[\"h1\",\"h2\",\"p\",\"blockquote\",\"quiz\"],\r\n    \tlines:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let questions = []\r\n\r\n    if(localStorage && localStorage.getItem('questions') === null){\r\n   \t\tquestions = [\r\n\t\t{q:\"According to chapter 1, this book is a revelation of Whom?\",a:\"Jesus Christ\", ref:66001001},\r\n\t\t{q:\"\",a:\"\", ref:\"\"}\r\n\t\t];\r\n    \tlocalStorage.setItem('questions', JSON.stringify(questions));\r\n    }else{\r\n    \tquestions = JSON.parse(localStorage.getItem('questions'));\r\n    }\r\n\r\n    this.setState({\r\n    \tquestions: questions\r\n    })\r\n}\r\n\r\n  render() {\r\n  \t  const q = this.props.router.query.q? this.props.router.query.q:0\r\n  \t  const updateQuestion = this.updateQuestion.bind(this)\r\n  \t  const addQuestionProp = this.addQuestionProp.bind(this)\r\n  \t  const handleNewLine = this.handleNewLine.bind(this)\r\n    return (\r\n\t<div>\r\n\t      <Head>\r\n\t        <title>Quiz | Youth Revelation Study</title>\r\n\t        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n\t        <meta charset=\"UTF-8\" />\r\n\t      </Head>\r\n\r\n\t\t<main>\r\n\t    \r\n\t\t<button onClick={this.saveQuestions.bind(this)}>SAVE</button>\r\n\r\n\t\t<div>\r\n\t\t <label htmlFor=\"input-file\">import</label><br/>\r\n\t\t <input type=\"file\" id=\"input-file\" onChange={this.getFile.bind(this)} />\r\n\t\t</div>\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n\t    \t\t   <form onSubmit={handleNewLine}>\r\n\t    \t\t   \t<input type=\"hidden\" name=\"index\" />\r\n\t\t\t        <label>\r\n\t\t\t          <select name=\"lineType\" id=\"lineTypes\" defaultValue=\"p\">\r\n\t\t\t          \t{this.state.lineTypes.map(function(t){\r\n\t\t\t          \t\treturn <option key={t} value={t}>{t}</option>\r\n\t\t\t          \t})}\r\n\t\t\t\t\t  \r\n\r\n\t\t\t\t\t</select>\r\n\t\t\t        </label>\r\n\r\n\t\t\t        <input type=\"submit\" value=\"+\" />\r\n\t\t\t      </form>\r\n\r\n\r\n\t\t</main>\r\n\r\n\t<Navigation />\r\n</div>\r\n    );\r\n  }\r\n\r\n  updateQuestion(line, propName, index, value){\r\n\r\n  \tlet newQ = [...this.state.questions]\r\n\r\n  \tif(propName === undefined){\r\n  \t\tnewQ.push({q:\"\",a:\"\", ref:\"\"})\r\n  \t}else if(value = \"delete\"){\r\n  \t\tdelete newQ[index][propName];\r\n  \t}else{\r\n  \t\tnewQ[index][propName] = value\r\n  \t}\r\n  \t\r\n  \tthis.setState({\r\n\t  questions: newQ\r\n\t})\r\n  }\r\n\r\n\r\nsaveQuestions(){\r\n\tconst txt = JSON.stringify(this.state.questions)\r\n\tlocalStorage.setItem('questions', txt)\r\n\r\n\t// Start file download.\r\n\tthis.download(this.state.course+\".json\",txt);\r\n}\r\n\r\ndownload(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\ngetFile(event) {\r\n\tconst input = event.target\r\n  if ('files' in input && input.files.length > 0) {\r\n\t  const questions = this.placeFileContent(input.files[0]).then((questions)=>{\r\n\t \tconsole.log(questions)\r\n\t  \tthis.setState({questions:questions})\r\n\t  })\r\n\r\n  \t}\r\n}\r\n\r\nplaceFileContent(file) {\r\n\treturn this.readFileContent(file).then(content => {\r\n  \treturn JSON.parse(content)\r\n  }).catch(error => console.log(error))\r\n}\r\n\r\nreadFileContent(file) {\r\n\tconst reader = new FileReader()\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = event => resolve(event.target.result)\r\n    reader.onerror = error => reject(error)\r\n    reader.readAsText(file)\r\n  })\r\n}\r\n\r\naddQuestionProp(e){\r\n    e.preventDefault();\r\n    const line = e.target.line.value\r\n    const index = e.target.index.value\r\n    const prop = e.target.prop.value\r\n    const val = e.target.val.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines[line].questions[index][prop] = val\r\n    this.setState(newState)\r\n}\r\n\r\nhandleNewLine(e){\r\n    e.preventDefault();\r\n    const lineType = e.target.lineType.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines.push(this.template(lineType))\r\n    this.setState(newState)\r\n}\r\n\r\ntemplate(lineType){\r\n\tswitch (lineType){\r\n\r\n\t\tcase 'quiz':\r\n\t\t\treturn { title:\"TITLE\", questions:[{q:\"\",a:\"\", ref:\"\"}]}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\r\n\t\t\treturn {\"type\":\"p\",\"value\":\"\"}\r\n\t}\r\n}\r\n\r\n}\r\nexport default withRouter(Course)\r\n\r\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n    */"]},"metadata":{},"sourceType":"module"}