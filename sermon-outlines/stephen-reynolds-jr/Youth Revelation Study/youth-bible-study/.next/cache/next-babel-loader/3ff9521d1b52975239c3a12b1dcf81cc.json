{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\revelation\\\\quiz.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Component } from 'react';\nimport styles from '../../styles/Revelation.module.css';\nimport Head from 'next/head';\nimport { withRouter } from \"next/router\";\nimport Textbook from './textbook';\nimport Navigation from './navigation';\nimport Line, { lineTypes, templates } from './Blocks/Line';\n\nclass Course extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course: props.router.pathname.replace(\"/quiz\", \"\").replace(\"/\", \"\"),\n      questions: [],\n      file: false,\n      lineTypes: lineTypes,\n      lines: []\n    };\n  }\n\n  componentDidMount() {\n    let questions = [];\n\n    if (localStorage && localStorage.getItem('questions') === null) {\n      questions = [{\n        q: \"According to chapter 1, this book is a revelation of Whom?\",\n        a: \"Jesus Christ\",\n        ref: 66001001\n      }, {\n        q: \"\",\n        a: \"\",\n        ref: \"\"\n      }];\n      localStorage.setItem('questions', JSON.stringify(questions));\n    } else {\n      questions = JSON.parse(localStorage.getItem('questions'));\n    }\n\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const q = this.props.router.query.q ? this.props.router.query.q : 0;\n    const updateQuestion = this.updateQuestion.bind(this);\n    const addQuestionProp = this.addQuestionProp.bind(this);\n    const handleNewLine = this.handleNewLine.bind(this);\n    const update = this.update.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Quiz | Youth Revelation Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          charset: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveQuestions.bind(this),\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-file\",\n            children: \"import\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"input-file\",\n            onChange: this.getFile.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 3\n        }, this), this.state.lines.map(function (line, i) {\n          return /*#__PURE__*/_jsxDEV(Line, {\n            data: line,\n            update: update\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNewLine,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"lineType\",\n              id: \"lineTypes\",\n              defaultValue: \"p\",\n              children: this.state.lineTypes.map(function (t) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: t,\n                  children: t\n                }, t, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 2\n    }, this);\n  }\n\n  updateQuestion(line, propName, index, value) {\n    let newQ = [...this.state.questions];\n\n    if (propName === undefined) {\n      newQ.push({\n        q: \"\",\n        a: \"\",\n        ref: \"\"\n      });\n    } else if (value = \"delete\") {\n      delete newQ[index][propName];\n    } else {\n      newQ[index][propName] = value;\n    }\n\n    this.setState({\n      questions: newQ\n    });\n  }\n\n  saveQuestions() {\n    const txt = JSON.stringify(this.state.questions);\n    localStorage.setItem('questions', txt); // Start file download.\n\n    this.download(this.state.course + \".json\", txt);\n  }\n\n  download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  getFile(event) {\n    const input = event.target;\n\n    if ('files' in input && input.files.length > 0) {\n      const questions = this.placeFileContent(input.files[0]).then(questions => {\n        console.log(questions);\n        this.setState({\n          questions: questions\n        });\n      });\n    }\n  }\n\n  placeFileContent(file) {\n    return this.readFileContent(file).then(content => {\n      return JSON.parse(content);\n    }).catch(error => console.log(error));\n  }\n\n  readFileContent(file) {\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsText(file);\n    });\n  }\n\n  addQuestionProp(e) {\n    e.preventDefault();\n    const line = e.target.line.value;\n    const index = e.target.index.value;\n    const prop = e.target.prop.value;\n    const val = e.target.val.value;\n\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines[line].questions[index][prop] = val;\n    this.setState(newState);\n  }\n\n  handleNewLine(e) {\n    e.preventDefault();\n    console.log(e.target.lineType.value, this.state);\n    const lineType = e.target.lineType.value;\n\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines.push(templates[lineType]);\n    this.setState(_objectSpread({}, newState));\n  }\n\n  update(line, data) {\n    let newState = _objectSpread({}, this.state);\n\n    newState.lines[line] = data;\n    this.setState(newState);\n  }\n\n}\n\nexport default withRouter(Course);\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n    */","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/revelation/quiz.js"],"names":["useState","Component","styles","Head","withRouter","Textbook","Navigation","Line","lineTypes","templates","Course","constructor","props","state","course","router","pathname","replace","questions","file","lines","componentDidMount","localStorage","getItem","q","a","ref","setItem","JSON","stringify","parse","setState","render","query","updateQuestion","bind","addQuestionProp","handleNewLine","update","saveQuestions","getFile","map","line","i","t","propName","index","value","newQ","undefined","push","txt","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","event","input","target","files","length","placeFileContent","then","console","log","readFileContent","content","catch","error","reader","FileReader","Promise","resolve","reject","onload","result","onerror","readAsText","e","preventDefault","prop","val","newState","lineType","data"],"mappings":"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","sourcesContent":["import { useState, Component } from 'react'\r\nimport styles from '../../styles/Revelation.module.css'\r\nimport Head from 'next/head'\r\nimport { withRouter } from \"next/router\"\r\nimport Textbook from './textbook'\r\nimport Navigation from './navigation'\r\n\r\nimport Line, {lineTypes, templates} from './Blocks/Line'\r\n\r\nclass Course extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tcourse: props.router.pathname.replace(\"/quiz\",\"\").replace(\"/\",\"\"),\r\n    \tquestions: [],\r\n    \tfile:false,\r\n    \tlineTypes: lineTypes,\r\n    \tlines:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let questions = []\r\n\r\n    if(localStorage && localStorage.getItem('questions') === null){\r\n   \t\tquestions = [\r\n\t\t{q:\"According to chapter 1, this book is a revelation of Whom?\",a:\"Jesus Christ\", ref:66001001},\r\n\t\t{q:\"\",a:\"\", ref:\"\"}\r\n\t\t];\r\n    \tlocalStorage.setItem('questions', JSON.stringify(questions));\r\n    }else{\r\n    \tquestions = JSON.parse(localStorage.getItem('questions'));\r\n    }\r\n\r\n    this.setState({\r\n    \tquestions: questions\r\n    })\r\n}\r\n\r\n  render() {\r\n  \t  const q = this.props.router.query.q? this.props.router.query.q:0\r\n  \t  const updateQuestion = this.updateQuestion.bind(this)\r\n  \t  const addQuestionProp = this.addQuestionProp.bind(this)\r\n  \t  const handleNewLine = this.handleNewLine.bind(this)\r\n\r\n  \t  const update = this.update.bind(this)\r\n    return (\r\n\t<div>\r\n\t      <Head>\r\n\t        <title>Quiz | Youth Revelation Study</title>\r\n\t        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n\t        <meta charset=\"UTF-8\" />\r\n\t      </Head>\r\n\r\n\t\t<main>\r\n\t    \r\n\t\t<button onClick={this.saveQuestions.bind(this)}>SAVE</button>\r\n\r\n\t\t<div>\r\n\t\t <label htmlFor=\"input-file\">import</label><br/>\r\n\t\t <input type=\"file\" id=\"input-file\" onChange={this.getFile.bind(this)} />\r\n\t\t</div>\r\n\r\n\t\t{this.state.lines.map(function(line, i){\r\n\t\t\treturn <Line key={i} data={line} update={update}/>\r\n\t\t})}\r\n\r\n\r\n\t    \t\t   <form onSubmit={handleNewLine}>\r\n\t    \t\t   \t<input type=\"hidden\" name=\"index\" />\r\n\t\t\t        <label>\r\n\t\t\t          <select name=\"lineType\" id=\"lineTypes\" defaultValue=\"p\">\r\n\t\t\t          \t{this.state.lineTypes.map(function(t){\r\n\t\t\t          \t\treturn <option key={t} value={t}>{t}</option>\r\n\t\t\t          \t})}\r\n\t\t\t\t\t  \r\n\r\n\t\t\t\t\t</select>\r\n\t\t\t        </label>\r\n\r\n\t\t\t        <input type=\"submit\" value=\"+\" />\r\n\t\t\t      </form>\r\n\r\n\r\n\t\t</main>\r\n\r\n\t<Navigation />\r\n</div>\r\n    );\r\n  }\r\n\r\n  updateQuestion(line, propName, index, value){\r\n\r\n  \tlet newQ = [...this.state.questions]\r\n\r\n  \tif(propName === undefined){\r\n  \t\tnewQ.push({q:\"\",a:\"\", ref:\"\"})\r\n  \t}else if(value = \"delete\"){\r\n  \t\tdelete newQ[index][propName];\r\n  \t}else{\r\n  \t\tnewQ[index][propName] = value\r\n  \t}\r\n  \t\r\n  \tthis.setState({\r\n\t  questions: newQ\r\n\t})\r\n  }\r\n\r\n\r\nsaveQuestions(){\r\n\tconst txt = JSON.stringify(this.state.questions)\r\n\tlocalStorage.setItem('questions', txt)\r\n\r\n\t// Start file download.\r\n\tthis.download(this.state.course+\".json\",txt);\r\n}\r\n\r\ndownload(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\ngetFile(event) {\r\n\tconst input = event.target\r\n  if ('files' in input && input.files.length > 0) {\r\n\t  const questions = this.placeFileContent(input.files[0]).then((questions)=>{\r\n\t \tconsole.log(questions)\r\n\t  \tthis.setState({questions:questions})\r\n\t  })\r\n\r\n  \t}\r\n}\r\n\r\nplaceFileContent(file) {\r\n\treturn this.readFileContent(file).then(content => {\r\n  \treturn JSON.parse(content)\r\n  }).catch(error => console.log(error))\r\n}\r\n\r\nreadFileContent(file) {\r\n\tconst reader = new FileReader()\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = event => resolve(event.target.result)\r\n    reader.onerror = error => reject(error)\r\n    reader.readAsText(file)\r\n  })\r\n}\r\n\r\naddQuestionProp(e){\r\n    e.preventDefault();\r\n    const line = e.target.line.value\r\n    const index = e.target.index.value\r\n    const prop = e.target.prop.value\r\n    const val = e.target.val.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines[line].questions[index][prop] = val\r\n    this.setState(newState)\r\n}\r\n\r\nhandleNewLine(e){\r\n    e.preventDefault();\r\n    console.log(e.target.lineType.value, this.state)\r\n    const lineType = e.target.lineType.value\r\n\r\n    let newState = {...this.state}\r\n    newState.lines.push(templates[lineType])\r\n    this.setState({...newState})\r\n}\r\n\r\n\r\nupdate(line, data){\r\n    let newState = {...this.state}\r\n    newState.lines[line] = data\r\n    this.setState(newState)\r\n}\r\n\r\n}\r\nexport default withRouter(Course)\r\n\r\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n\t\t<Quiz line={1} questions={this.state.questions} updateQuestion={updateQuestion}/>\r\n\r\n    */"]},"metadata":{},"sourceType":"module"}