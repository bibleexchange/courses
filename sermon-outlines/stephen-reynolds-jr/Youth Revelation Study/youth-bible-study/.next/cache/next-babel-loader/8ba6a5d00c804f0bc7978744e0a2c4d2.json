{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\shed.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nconst db = {\n  sheds: [{\n    id: 'reynolds-example',\n    deck: {\n      floor: 'advantech',\n      width: 144,\n      length: 120,\n      insulate: false,\n      oncenter: 16\n    },\n    walls: {\n      a: {\n        length: 144,\n        stud: 72,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'door',\n          style: 'vinyl',\n          width: 61.75,\n          height: 72.5,\n          position: 0,\n          ramp: {\n            width: 52,\n            length: 60\n          }\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      b: {\n        length: 144,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      c: {\n        length: 144,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }],\n        loft: {\n          width: 36,\n          length: 96\n        }\n      },\n      d: {\n        length: 144,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      insulate: false,\n      electrical: false\n    },\n    roof: {\n      type: 'gable',\n      insulate: false\n    },\n    siding: {\n      type: 'vinyl',\n      color: 'white'\n    },\n    roof: {\n      type: 'shingle',\n      color: 'black',\n      vent: 'gable'\n    }\n  }]\n};\n\nfunction processOpenings(shed) {\n  let garageDoors = 0;\n  let walls = [\"a\", \"b\", \"c\", \"d\"];\n  let w = [];\n  walls.map(function (wall) {\n    shed.walls[wall].openings.map(function (v, k) {\n      if (v.type === \"door\" && v.style === \"garage\") {\n        garageDoors++;\n        w.push(wall);\n      }\n    });\n  });\n  shed.openings = {\n    garageDoors: garageDoors,\n    onwalls: w\n  };\n  return shed;\n}\n\nfunction processDecks(shed) {\n  {\n    /*Plate Length*/\n  }\n  shed.deck.plates = {\n    length: shed.deck.length\n  };\n  {\n    /*Joists*/\n  }\n  shed.deck.joists = {\n    length: shed.deck.width - 3,\n    count: Math.ceil(shed.deck.length / shed.deck.oncenter + 1) + shed.openings.garageDoors,\n    layout: []\n  };\n  let x = .75;\n\n  while (x <= shed.deck.length) {\n    shed.deck.joists.layout.push(x);\n\n    if (x === .75) {\n      if (shed.openings.garageDoors > 1) {\n        shed.deck.joists.layout.push(2.25);\n      }\n\n      x = 0;\n    }\n\n    if (x === shed.deck.length || shed.deck.length - x < shed.deck.oncenter) {\n      break;\n    }\n\n    x += shed.deck.oncenter;\n\n    if (x + shed.deck.oncenter > shed.deck.length) {\n      const diff = shed.deck.length - (x - shed.deck.oncenter);\n      x = shed.deck.length - diff / 2;\n    }\n  }\n\n  if (shed.openings.garageDoors >= 1) {\n    shed.deck.joists.layout.push(shed.deck.length - 2.25);\n  }\n\n  shed.deck.joists.layout.push(shed.deck.length - .75);\n  return shed;\n}\n\nfunction data(db) {\n  db.sheds.map(function (val, key) {\n    let shed = processOpenings(val);\n    shed = processDecks(shed);\n    db.sheds[key] = shed;\n  });\n  console.log(db.sheds[0]);\n  return db;\n}\n\nfunction getOpenings(wall) {\n  let space = {\n    empty: 0,\n    solid: wall.length,\n    spacing: 0\n  };\n  wall.openings && wall.openings.map(function (o) {\n    space.empty = space.empty + o.width;\n    space.solid = space.solid - o.width;\n  });\n  space.spacing = wall.openings && space.solid / (wall.openings.length + 1);\n  return space;\n}\n\nfunction Opening(props) {\n  let position = 0;\n  let spacing = getOpenings(props.wall).spacing;\n\n  switch (props.index) {\n    case 0:\n      position = spacing;\n      break;\n\n    case 1:\n      position = spacing + props.wall.openings[0].width + spacing;\n      break;\n\n    case 2:\n      position = spacing + props.wall.openings[0].width + spacing + props.wall.openings[1].width + spacing;\n      break;\n  }\n\n  let text = \"W\";\n\n  if (props.opening.type === \"door\") {\n    text = \"DR\";\n  }\n\n  let textposition = 0;\n\n  if (props.opening.width > 40) {\n    textposition = position + position * .6;\n  } else {\n    textposition = position + 1;\n  }\n\n  if (props.horizontal) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: position,\n        y: props.position,\n        height: props.size,\n        width: props.opening.width,\n        stroke: \"gray\",\n        fill: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: textposition,\n        y: props.position + 11,\n        fill: \"red\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  } else {\n    if (props.opening.width > 40) {\n      textposition = position + props.opening.width - props.opening.width * .5;\n    } else {\n      textposition = position + props.opening.width - props.opening.width * .18;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: props.position - 2,\n        y: position,\n        height: props.opening.width,\n        width: props.size,\n        stroke: \"gray\",\n        fill: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: props.position - 2,\n        y: textposition,\n        fill: \"red\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n}\n\nconst FloorPlan = function (props) {\n  const opts = {\n    strokeWidth: 1,\n    wallSize: 6,\n    openingSize: 12,\n    positionOffset: 9\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: props.walls.b.length,\n    width: props.walls.a.length,\n    viewBox: \"-10 -1 \" + (props.walls.a.length + 40) + \" \" + props.walls.b.length,\n    \"stroke-width\": opts.strokeWidth,\n    \"stroke-alignment\": \"inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: opts.wallSize,\n      y: props.walls.b.length - opts.wallSize,\n      height: opts.wallSize,\n      width: props.walls.a.length - opts.wallSize * 2,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: props.walls.a.length * .45,\n      y: props.walls.b.length + 15,\n      fill: \"gray\",\n      children: \"A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 6\n    }, this), props.walls.a.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.a,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: props.walls.b.length - opts.positionOffset,\n        horizontal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: 0,\n      height: props.walls.b.length,\n      width: opts.wallSize,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: -11,\n      y: props.walls.b.length * .45,\n      fill: \"gray\",\n      children: \"B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }, this), props.walls.b.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.b,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: 0,\n        horizontal: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: opts.wallSize,\n      y: 0,\n      height: opts.wallSize,\n      width: props.walls.c.length - opts.wallSize * 2,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: props.walls.a.length * .45,\n      y: 0,\n      fill: \"gray\",\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 6\n    }, this), props.walls.c.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.c,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: -3,\n        horizontal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: props.walls.a.length - opts.wallSize,\n      y: 0,\n      height: props.walls.d.length,\n      width: opts.wallSize,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: props.walls.a.length + 7,\n      y: props.walls.d.length * .45,\n      fill: \"gray\",\n      children: \"D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }, this), props.walls.d.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.d,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: props.walls.a.length - opts.wallSize,\n        horizontal: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 11\n  }, this);\n};\n\nconst Deck = function (props) {\n  const opts = {\n    strokeWidth: 1\n  };\n  const joists = [];\n\n  for (var i = 0; i < props.deck.joists.count; i++) {\n    let x = props.deck.joists.layout[i];\n    let sub = .75;\n    joists.push( /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x - sub,\n      y: 1.5,\n      height: props.deck.width - 1.5,\n      width: 1.5,\n      stroke: \"black\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: props.deck.width,\n    width: props.deck.length,\n    viewBox: \"-10 -1 \" + (props.deck.length + 40) + \" \" + props.deck.width,\n    \"stroke-width\": opts.strokeWidth,\n    \"stroke-alignment\": \"inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: 0,\n      y: props.deck.width,\n      height: 1.5,\n      width: props.deck.length,\n      stroke: \"black\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: 0,\n      y: 0,\n      height: 1.5,\n      width: props.deck.length,\n      stroke: \"black\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 6\n    }, this), joists]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 11\n  }, this);\n};\n\nconst WorkOrder = function (props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Work Order (\", props.shed.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DECK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), \"Size: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.shed.deck.width / 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }, this), \" (w) x \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.shed.deck.length / 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 76\n    }, this), \" (l) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 136\n    }, this), \"Insulate: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: props.shed.deck.insulate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), \"Plate Length: \", props.shed.deck.plates.length, \"\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this), \"Joists Length: \", props.shed.deck.joists.length, \"\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), \"Joists Count: \", props.shed.deck.joists.count, \"\\\"\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Walls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      children: JSON.stringify(props.shed)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 11\n  }, this);\n};\n\nexport default function Shed() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Shed Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Shed Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: \"Work Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.grid,\n        children: data(db).sheds.map(function (shed) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.card,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: shed.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [shed.walls.b.length / 12, \"' x \", shed.walls.a.length / 12, \"'\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Deck, _objectSpread({}, shed), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FloorPlan, _objectSpread({}, shed), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(WorkOrder, {\n              shed: shed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer,\n      children: \"Created by Stephen Reynolds, Jr.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/shed.js"],"names":["Head","styles","db","sheds","id","deck","floor","width","length","insulate","oncenter","walls","a","stud","openings","type","style","height","top","trim","box","shutters","position","ramp","b","c","loft","d","electrical","roof","siding","color","vent","processOpenings","shed","garageDoors","w","map","wall","v","k","push","onwalls","processDecks","plates","joists","count","Math","ceil","layout","x","diff","data","val","key","console","log","getOpenings","space","empty","solid","spacing","o","Opening","props","index","text","opening","textposition","horizontal","size","FloorPlan","opts","strokeWidth","wallSize","openingSize","positionOffset","i","Deck","sub","WorkOrder","JSON","stringify","Shed","container","main","title","description","grid","card","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\n\nconst db = {\n  sheds : [\n    {\n      id:'reynolds-example',\n      deck:{\n        floor:'advantech',\n        width:144,\n        length:120,\n        insulate: false,\n        oncenter:16\n      },\n      walls:{\n        a: {\n        length:144,\n        stud:72,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'door', style:'vinyl', width: 61.75, height:72.5, position: 0, ramp:{width:52, length:60}},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ]\n        },\n        b: {\n          length:144,        \n          openings:[\n            {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n          ]},\n        c:{length:144,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ], loft:{width:36, length: 96}},\n        d:{length:144,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ]},\n        insulate: false,\n        electrical: false\n      },\n      roof: {\n        type:'gable',\n        insulate:false\n      },\n      siding: {\n        type:'vinyl',\n        color:'white'\n      },\n      roof:{\n        type: 'shingle',\n        color: 'black',\n        vent: 'gable'\n      }\n    \n    }\n  ]\n  }\n\nfunction processOpenings(shed){\n\tlet garageDoors = 0\n\tlet walls = [\"a\",\"b\",\"c\",\"d\"]\n\tlet w = []\n\n\twalls.map(function(wall){\n\t\tshed.walls[wall].openings.map(function(v,k){\n\t\t\tif(v.type === \"door\" && v.style===\"garage\"){\n\t\t\t\tgarageDoors++;\n\t\t\t\tw.push(wall)\n\t\t\t}\n\t\t})\n\t})\n\n    shed.openings = {\n    \tgarageDoors: garageDoors,\n    \tonwalls: w\n    }\n\n\treturn shed\n}\n\nfunction processDecks(shed){\n\n\t\t{/*Plate Length*/}\n\t\tshed.deck.plates = {length: shed.deck.length}\n   \t\t{/*Joists*/}\n        shed.deck.joists = {\n        \tlength: shed.deck.width-3,\n        \tcount: Math.ceil((shed.deck.length/shed.deck.oncenter)+1) + shed.openings.garageDoors,\n        \tlayout: []\n        }\n\n\t\t  let x = .75\n\t\t  \n\t\t  while (x <= shed.deck.length){\n\t\t  \tshed.deck.joists.layout.push(x)\n\t\t  \t\n\t\t  \tif(x === .75){\n\t\t  \t\tif(shed.openings.garageDoors > 1){\n\t\t\t\t\tshed.deck.joists.layout.push(2.25)\n\t\t\t\t}\n\n\t\t\t\tx = 0\n\t\t  \t}\n\n\t\t  \tif(x === shed.deck.length || (shed.deck.length-x) < shed.deck.oncenter){break;}\n\t\t  \tx += shed.deck.oncenter\n\n\t\t  \tif((x + shed.deck.oncenter) > shed.deck.length){ \n\t\t  \t\tconst diff = shed.deck.length-(x-shed.deck.oncenter)\t\t\n\t\t  \t\tx = shed.deck.length - (diff/2)\n\t\t  \t}\n\t\t  }    \n\n\t\tif(shed.openings.garageDoors >= 1){\n\t\t\tshed.deck.joists.layout.push(shed.deck.length-2.25)\n\t\t}\n\n\t\tshed.deck.joists.layout.push(shed.deck.length-.75)\n\n\t\treturn shed\n}\n\nfunction data(db){\n\n\n\tdb.sheds.map(function(val, key){\n\t\tlet shed = processOpenings(val)\n\t\tshed = processDecks(shed)\n\t\tdb.sheds[key] = shed\n\t})\n\n\tconsole.log(db.sheds[0])\n\treturn db\n}\n\nfunction getOpenings(wall){\n    let space = {\n      empty: 0,\n      solid: wall.length,\n      spacing: 0\n    };\n\n    wall.openings && wall.openings.map(function(o){\n      space.empty = space.empty + o.width\n      space.solid = space.solid-o.width\n    }) \n\n    space.spacing = wall.openings && space.solid/(wall.openings.length+1)\n\n    return space\n    }\n\nfunction Opening(props){\n\n    let position = 0\n    let spacing = getOpenings(props.wall).spacing\n\n      switch(props.index){\n\n        case 0:\n          position = spacing\n          break;\n\n        case 1:\n          position = spacing + props.wall.openings[0].width + spacing\n          break;\n\n        case 2:\n          position = spacing + props.wall.openings[0].width + spacing + props.wall.openings[1].width+ spacing\n          break;\n      }\n\n      let text = \"W\"\n\n      if(props.opening.type === \"door\"){\n        text = \"DR\"\n      }\n\n      let textposition = 0\n\n      if(props.opening.width > 40){\n        textposition = position + (position * .6)\n      }else{\n        textposition = position + 1\n      }\n\n      if(props.horizontal){\n              return (<>\n              <rect x={position} y={props.position} height={props.size} width={props.opening.width} stroke=\"gray\" fill=\"white\"/>\n              <text x={textposition} y={props.position+11} fill=\"red\">{text}</text></>)\n            }else{\n\n                if(props.opening.width > 40){\n                  textposition = position + props.opening.width - (props.opening.width * .5)\n                }else{\n                  textposition = position + props.opening.width - (props.opening.width * .18)\n                }\n              \n\n              return (<>\n              <rect x={props.position-2} y={position} height={props.opening.width} width={props.size} stroke=\"gray\" fill=\"white\"/>\n              <text x={props.position-2} y={textposition} fill=\"red\">{text}</text></>)\n            }\n\n}\n\nconst FloorPlan = function(props) {\n\n  const opts = {\n    strokeWidth:1,\n    wallSize: 6,\n    openingSize: 12,\n    positionOffset:9\n  }\n\n  return (<svg height={props.walls.b.length} width={props.walls.a.length} viewBox={\"-10 -1 \"+ (props.walls.a.length + 40) + \" \" + (props.walls.b.length)} \n    stroke-width={opts.strokeWidth}\n    stroke-alignment=\"inner\"\n    >\n\n     <rect x={opts.wallSize} y={props.walls.b.length-opts.wallSize} height={opts.wallSize} width={props.walls.a.length-(opts.wallSize*2)} stroke=\"black\" fill=\"black\"/>\n     <text x={props.walls.a.length*.45} y={props.walls.b.length+15} fill=\"gray\">A</text>\n     {props.walls.a.openings.map(function(o,i){\n        return <Opening wall={props.walls.a} opening={o} index={i} size={opts.openingSize} position={props.walls.b.length-opts.positionOffset} horizontal={true}/>\n     })}\n\n     <rect x=\"0\" y={0} height={props.walls.b.length} width={opts.wallSize} stroke=\"black\" fill=\"black\"/>\n     <text x={-11} y={props.walls.b.length*.45} fill=\"gray\">B</text>\n      {props.walls.b.openings.map(function(o,i){\n        return <Opening wall={props.walls.b} opening={o} index={i} size={opts.openingSize} position={0} horizontal={false}/>\n      })}\n\n     <rect x={opts.wallSize} y={0} height={opts.wallSize} width={props.walls.c.length-(opts.wallSize*2)} stroke=\"black\" fill=\"black\"/>\n     <text x={props.walls.a.length*.45} y={0} fill=\"gray\">C</text>\n    {props.walls.c.openings.map(function(o,i){\n        return <Opening wall={props.walls.c} opening={o} index={i} size={opts.openingSize} position={-3} horizontal={true}/>\n     })}\n\n     <rect x={props.walls.a.length-(opts.wallSize)} y={0} height={props.walls.d.length} width={opts.wallSize} stroke=\"black\" fill=\"black\"/>\n    <text x={props.walls.a.length+7} y={props.walls.d.length*.45} fill=\"gray\">D</text>\n    {props.walls.d.openings.map(function(o,i){\n        return <Opening wall={props.walls.d} opening={o} index={i} size={opts.openingSize} position={props.walls.a.length-(opts.wallSize)} horizontal={false}/>\n      })}\n\n  </svg>)\n}\n\nconst Deck = function(props) {\n\n  const opts = {\n    strokeWidth:1\n  }\n\n  const joists = []\n \n for (var i = 0; i < props.deck.joists.count; i++) {\n \tlet x = props.deck.joists.layout[i]\n \tlet sub = .75\n  \tjoists.push(<rect x={x-sub} y={1.5} height={props.deck.width-1.5} width={1.5} stroke=\"black\" fill=\"none\"/>)\n }\n\n  return (<svg height={props.deck.width} width={props.deck.length} viewBox={\"-10 -1 \"+ (props.deck.length + 40) + \" \" + (props.deck.width)} \n    stroke-width={opts.strokeWidth}\n    stroke-alignment=\"inner\"\n    >\n\t{/*PLATES*/}\n     <rect x={0} y={props.deck.width} height={1.5} width={props.deck.length} stroke=\"black\" fill=\"none\"/>\n     <rect x={0} y={0} height={1.5} width={props.deck.length} stroke=\"black\" fill=\"none\"/>\n\n \t{/*JOISTS*/}\n     {joists}\n\n  </svg>)\n}\n\nconst WorkOrder = function(props) {\n\n  return (<div>\n      <h1>Work Order ({props.shed.id})</h1>\n\n      <h2>DECK</h2>\n        Size: <input type=\"text\" value={props.shed.deck.width/12} /> (w) x <input type=\"text\" value={props.shed.deck.length/12} /> (l) <br/>\n        Insulate: <input type=\"checkbox\" value={props.shed.deck.insulate} />\n        <br/>\n        Plate Length: {props.shed.deck.plates.length}\"\n        <br/>\n        Joists Length: {props.shed.deck.joists.length}\"\n        <br/>\n        Joists Count: {props.shed.deck.joists.count}\"\n\n      <h2>Walls</h2>\n\n    <textarea>{JSON.stringify(props.shed)}</textarea>\n    </div>)\n}\n\nexport default function Shed() {\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Shed Assistant</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main className={styles.main}>\n        <h1 className={styles.title}>\n          Shed Assistant\n        </h1>\n\n        <p className={styles.description}>\n          Work Orders\n        </p>\n\n        <div className={styles.grid}>\n\n          {\n            data(db).sheds.map(function(shed){\n              return (          \n              <div className={styles.card}>\n                <h3>{shed.id}</h3>\n                <p>{shed.walls.b.length/12}' x {shed.walls.a.length/12}'</p>\n                <hr/>\n                <Deck {...shed}/>\n                <FloorPlan {...shed}/>\n                <hr/>\n                <WorkOrder shed={shed} />\n\n              </div>\n          )\n            })\n          }\n\n\n\n        </div>\n      </main>\n\n      <footer className={styles.footer}>\n        Created by Stephen Reynolds, Jr.\n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}