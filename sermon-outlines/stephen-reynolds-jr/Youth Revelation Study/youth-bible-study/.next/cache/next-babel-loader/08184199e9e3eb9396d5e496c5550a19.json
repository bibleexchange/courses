{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\revelation\\\\quiz.js\";\nimport { useState, Component } from 'react';\nimport styles from '../../styles/Revelation.module.css';\nimport Head from 'next/head';\nimport { withRouter } from \"next/router\";\nimport Textbook from './textbook';\nimport Navigation from './navigation';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      file: false\n    };\n  }\n\n  componentDidMount() {\n    let questions = [];\n\n    if (localStorage && localStorage.getItem('questions') === null) {\n      questions = [{\n        q: \"According to chapter 1, this book is a revelation of Whom?\",\n        a: \"Jesus Christ\",\n        ref: 66001001\n      }, {\n        q: \"\",\n        a: \"\",\n        ref: \"\"\n      }];\n      localStorage.setItem('questions', JSON.stringify(questions));\n    } else {\n      questions = JSON.parse(localStorage.getItem('questions'));\n    }\n\n    this.setState({\n      questions: questions\n    });\n  }\n\n  render() {\n    const q = this.props.router.query.q ? this.props.router.query.q : 0;\n    const updateQuestion = this.updateQuestion.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Quiz | Youth Revelation Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"icon\",\n          href: \"/favicon.ico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          charset: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveQuestions.bind(this),\n          children: \"SAVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-file\",\n            children: \"Specify a file:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"input-file\",\n            onChange: this.getFile.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content-target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: this.state.questions.map(function (q, i) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: styles.question,\n                type: \"text\",\n                onChange: e => {\n                  updateQuestion(\"q\", i, e.target.value);\n                },\n                defaultValue: q.q\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: styles.answer,\n                type: \"text\",\n                onChange: e => {\n                  updateQuestion(\"a\", i, e.target.value);\n                },\n                defaultValue: q.a\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 6\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 14\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function (e) {\n            updateQuestion();\n          },\n          children: \"add new question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(this.state.questions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 2\n    }, this);\n  }\n\n  updateQuestion(propName, index, value) {\n    let newQ = [...this.state.questions];\n\n    if (propName === undefined) {\n      newQ.push({\n        q: \"\",\n        a: \"\",\n        ref: \"\"\n      });\n    } else {\n      newQ[index][propName] = value;\n    }\n\n    this.setState({\n      questions: newQ\n    });\n  }\n\n  saveQuestions() {\n    const txt = JSON.stringify(this.state.questions);\n    localStorage.setItem('questions', txt); // Start file download.\n\n    this.download(\"questions.json\", txt);\n  }\n\n  download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n  getFile(event) {\n    const input = event.target;\n\n    if ('files' in input && input.files.length > 0) {\n      const setState = this.setState;\n      this.placeFileContent(setState, input.files[0]);\n    }\n  }\n\n  placeFileContent(target, file) {\n    this.readFileContent(file).then(content => {\n      target({\n        questions: JSON.parse(content)\n      });\n    }).catch(error => console.log(error));\n  }\n\n  readFileContent(file) {\n    const reader = new FileReader();\n    return new Promise((resolve, reject) => {\n      reader.onload = event => resolve(event.target.result);\n\n      reader.onerror = error => reject(error);\n\n      reader.readAsText(file);\n    });\n  }\n\n}\n\nexport default withRouter(Quiz);\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n    */","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/revelation/quiz.js"],"names":["useState","Component","styles","Head","withRouter","Textbook","Navigation","Quiz","constructor","props","state","questions","file","componentDidMount","localStorage","getItem","q","a","ref","setItem","JSON","stringify","parse","setState","render","router","query","updateQuestion","bind","saveQuestions","getFile","map","i","question","e","target","value","answer","propName","index","newQ","undefined","push","txt","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","event","input","files","length","placeFileContent","readFileContent","then","content","catch","error","console","log","reader","FileReader","Promise","resolve","reject","onload","result","onerror","readAsText"],"mappings":"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","sourcesContent":["import { useState, Component } from 'react'\r\nimport styles from '../../styles/Revelation.module.css'\r\nimport Head from 'next/head'\r\nimport { withRouter } from \"next/router\"\r\nimport Textbook from './textbook'\r\nimport Navigation from './navigation'\r\n\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tquestions: [],\r\n    \tfile:false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let questions = []\r\n\r\n    if(localStorage && localStorage.getItem('questions') === null){\r\n   \t\tquestions = [\r\n\t\t{q:\"According to chapter 1, this book is a revelation of Whom?\",a:\"Jesus Christ\", ref:66001001},\r\n\t\t{q:\"\",a:\"\", ref:\"\"}\r\n\t\t];\r\n    \tlocalStorage.setItem('questions', JSON.stringify(questions));\r\n    }else{\r\n    \tquestions = JSON.parse(localStorage.getItem('questions'));\r\n    }\r\n\r\n    this.setState({\r\n    \tquestions: questions\r\n    })\r\n}\r\n\r\n  render() {\r\n  \t  const q = this.props.router.query.q? this.props.router.query.q:0\r\n  \t  const updateQuestion = this.updateQuestion.bind(this)\r\n\r\n    return (\r\n\t<div>\r\n\t      <Head>\r\n\t        <title>Quiz | Youth Revelation Study</title>\r\n\t        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n\t        <meta charset=\"UTF-8\" />\r\n\t      </Head>\r\n\r\n\t\t<main>\r\n\t    \r\n\t\t<button onClick={this.saveQuestions.bind(this)}>SAVE</button>\r\n\r\n\t\t<div>\r\n\t\t <label htmlFor=\"input-file\">Specify a file:</label><br/>\r\n\t\t <input type=\"file\" id=\"input-file\" onChange={this.getFile.bind(this)} />\r\n\t\t</div>\r\n\r\n\t\t<textarea id=\"content-target\"></textarea>\r\n\r\n\t    <ol>\r\n\t    {this.state.questions.map(function(q,i){\r\n\t    \treturn <li key={i}><textarea className={styles.question} type=\"text\" onChange={\r\n\t    \t\t(e)=>{\r\n\t    \t\t\tupdateQuestion(\"q\",i,e.target.value)\r\n\t    \t\t}} defaultValue={q.q}></textarea>\r\n\t    <textarea className={styles.answer} type=\"text\"onChange={\r\n\t    \t\t(e)=>{\r\n\t    \t\t\tupdateQuestion(\"a\",i,e.target.value)\r\n\t    \t\t}} defaultValue={q.a}></textarea></li>\r\n\t    })}\r\n\t    </ol>\r\n\r\n\t    \t<button onClick={function(e){\r\n\t    \t\tupdateQuestion()\r\n\t    \t}}>add new question</button>\r\n\r\n\t    \t<div>{JSON.stringify(this.state.questions)}</div>\r\n\r\n\t\t</main>\r\n\r\n\t<Navigation />\r\n</div>\r\n    );\r\n  }\r\n\r\n  updateQuestion(propName, index, value){\r\n\r\n  \tlet newQ = [...this.state.questions]\r\n\r\n  \tif(propName === undefined){\r\n  \t\tnewQ.push({q:\"\",a:\"\", ref:\"\"})\r\n  \t}else{\r\n  \t\tnewQ[index][propName] = value\r\n  \t}\r\n  \t\r\n  \tthis.setState({\r\n\t  questions: newQ\r\n\t})\r\n  }\r\n\r\nsaveQuestions(){\r\n\tconst txt = JSON.stringify(this.state.questions)\r\n\tlocalStorage.setItem('questions', txt)\r\n\r\n\t// Start file download.\r\n\tthis.download(\"questions.json\",txt);\r\n}\r\n\r\ndownload(filename, text) {\r\n  var element = document.createElement('a');\r\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n  element.setAttribute('download', filename);\r\n\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\ngetFile(event) {\r\n\tconst input = event.target\r\n  if ('files' in input && input.files.length > 0) {\r\n\t  const setState = this.setState\r\n\r\n\t  this.placeFileContent(\r\n      setState,\r\n      input.files[0])\r\n  }\r\n}\r\n\r\nplaceFileContent(target, file) {\r\n\tthis.readFileContent(file).then(content => {\r\n  \ttarget({questions:JSON.parse(content)})\r\n  }).catch(error => console.log(error))\r\n}\r\n\r\nreadFileContent(file) {\r\n\tconst reader = new FileReader()\r\n  return new Promise((resolve, reject) => {\r\n    reader.onload = event => resolve(event.target.result)\r\n    reader.onerror = error => reject(error)\r\n    reader.readAsText(file)\r\n  })\r\n}\r\n\r\n}\r\nexport default withRouter(Quiz)\r\n\r\n/*\r\n1-4 Ellyanna\r\n5-11 Jeremiah\r\n12-16 Benjamin\r\n17-22 Rosemary\r\n\r\n1. Summaries\r\n2. Conclusing of Book 1 sentence\r\n\r\n    */"]},"metadata":{},"sourceType":"module"}