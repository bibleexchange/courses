{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\sites\\\\github\\\\courses\\\\sermon-outlines\\\\stephen-reynolds-jr\\\\Youth Revelation Study\\\\youth-bible-study\\\\pages\\\\shed.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nvar db = {\n  sheds: [_defineProperty({\n    id: 'reynolds-example',\n    deck: {\n      floor: 'advantech',\n      width: 144,\n      length: 120,\n      insulate: false,\n      oncenter: 16\n    },\n    walls: {\n      a: {\n        length: 144,\n        stud: 72,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'door',\n          style: 'vinyl',\n          width: 61.75,\n          height: 72.5,\n          position: 0,\n          ramp: {\n            width: 52,\n            length: 60\n          }\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      b: {\n        length: 144,\n        openings: [{\n          type: 'door',\n          style: 'garage',\n          width: 84,\n          height: 84,\n          top: 84,\n          position: 0\n        }]\n      },\n      c: {\n        length: 144,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }],\n        loft: {\n          width: 36,\n          length: 96\n        }\n      },\n      d: {\n        length: 144,\n        openings: [{\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }, {\n          type: 'window',\n          style: 'standard',\n          width: 18,\n          height: 27,\n          top: 72.5,\n          trim: false,\n          box: false,\n          shutters: false,\n          position: 0\n        }]\n      },\n      insulate: false,\n      electrical: false\n    },\n    roof: {\n      type: 'gable',\n      insulate: false\n    },\n    siding: {\n      type: 'vinyl',\n      color: 'white'\n    }\n  }, \"roof\", {\n    type: 'shingle',\n    color: 'black',\n    vent: 'gable'\n  })]\n};\n\nfunction processOpenings(shed) {\n  var garageDoors = 0;\n  var walls = [\"a\", \"b\", \"c\", \"d\"];\n  var w = [];\n  walls.map(function (wall) {\n    shed.walls[wall].openings.map(function (v, k) {\n      if (v.type === \"door\" && v.style === \"garage\") {\n        garageDoors++;\n        w.push(wall);\n      }\n    });\n  });\n  shed.openings = {\n    garageDoors: garageDoors,\n    garageDoorOn: w\n  };\n  walls.map(function (wall) {\n    shed.walls[wall].openings.map(function (v, k) {\n      var space = {\n        empty: 0,\n        solid: shed.walls[wall].length,\n        spacing: 0\n      };\n      shed.walls[wall].openings && shed.walls[wall].openings.map(function (o) {\n        space.empty = space.empty + o.width;\n        space.solid = space.solid - o.width;\n      });\n      space.spacing = shed.walls[wall].openings && space.solid / (shed.walls[wall].openings.length + 1); //\n\n      var position = 0;\n\n      switch (k) {\n        case 0:\n          position = space.spacing;\n          break;\n\n        case 1:\n          position = space.spacing + shed.walls[wall].openings[0].width + space.spacing;\n          break;\n\n        case 2:\n          position = space.spacing + shed.walls[wall].openings[0].width + space.spacing + shed.walls[wall].openings[1].width + space.spacing;\n          break;\n      } //\n\n\n      var text = \"W\";\n\n      if (v.type === \"door\" && v.style === \"garage\") {\n        text = \"GAR\";\n      } else if (v.type === \"door\") {\n        text = \"DR\";\n      }\n\n      var textposition = 0;\n\n      if (v.width > 40) {\n        textposition = position + position * .6;\n      } else {\n        textposition = position + 1;\n      }\n\n      if ([\"b\", \"d\"].includes(wall)) {\n        if (v.width > 40) {\n          textposition = v.position + v.width - v.width * .5;\n        } else {\n          textposition = v.position + v.width - v.width * .18;\n        }\n      }\n\n      shed.walls[wall].openings[k].space = space;\n      shed.walls[wall].openings[k].position = position;\n      shed.walls[wall].openings[k].text = text;\n      shed.walls[wall].openings[k].textposition = textposition;\n      shed.walls[wall].spacing = space.spacing;\n    });\n  });\n  return shed;\n}\n\nfunction processDecks(shed) {\n  {\n    /*Plate Length*/\n  }\n  shed.deck.plates = {\n    length: shed.deck.length\n  };\n  {\n    /*Joists*/\n  }\n  shed.deck.joists = {\n    length: shed.deck.width - 3,\n    count: Math.ceil(shed.deck.length / shed.deck.oncenter + 1) + shed.openings.garageDoors,\n    layout: []\n  };\n  var x = .75;\n\n  while (x <= shed.deck.length) {\n    shed.deck.joists.layout.push(x);\n\n    if (x === .75) {\n      if (shed.openings.garageDoorOn.includes('b')) {\n        shed.deck.joists.layout.push(2.25);\n      }\n\n      x = 0;\n    }\n\n    if (x === shed.deck.length || shed.deck.length - x < shed.deck.oncenter) {\n      break;\n    }\n\n    x += shed.deck.oncenter;\n\n    if (x + shed.deck.oncenter > shed.deck.length) {\n      var diff = shed.deck.length - (x - shed.deck.oncenter);\n      x = shed.deck.length - diff / 2;\n    }\n  }\n\n  if (shed.openings.garageDoorOn.includes('d')) {\n    shed.deck.joists.layout.push(shed.deck.length - 2.25);\n  }\n\n  shed.deck.joists.layout.push(shed.deck.length - .75);\n  return shed;\n}\n\nfunction data(db) {\n  db.sheds.map(function (val, key) {\n    var shed = processOpenings(val);\n    shed = processDecks(shed);\n    db.sheds[key] = shed;\n  });\n  console.log(db.sheds[0]);\n  return db;\n}\n\nfunction Opening(props) {\n  if (props.horizontal) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: props.opening.position,\n        y: props.opening.position,\n        height: props.size,\n        width: props.opening.width,\n        stroke: \"gray\",\n        fill: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: props.opening.textposition,\n        y: props.opening.position + 11,\n        fill: \"red\",\n        children: props.opening.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        x: props.opening.position - 2,\n        y: props.opening.position,\n        height: props.opening.width,\n        width: props.size,\n        stroke: \"gray\",\n        fill: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: props.opening.position - 2,\n        y: props.opening.textposition,\n        fill: \"red\",\n        children: props.opening.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_c = Opening;\n\nvar FloorPlan = function FloorPlan(props) {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: props.walls.b.length,\n    width: props.walls.a.length,\n    viewBox: \"-10 -1 \" + (props.walls.a.length + 40) + \" \" + props.walls.b.length,\n    \"stroke-width\": opts.strokeWidth,\n    \"stroke-alignment\": \"inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: opts.wallSize,\n      y: props.walls.b.length - opts.wallSize,\n      height: opts.wallSize,\n      width: props.walls.a.length - opts.wallSize * 2,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: props.walls.a.length * .45,\n      y: props.walls.b.length + 15,\n      fill: \"gray\",\n      children: \"A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 6\n    }, this), props.walls.a.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.a,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: props.walls.b.length - opts.positionOffset,\n        horizontal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"0\",\n      y: 0,\n      height: props.walls.b.length,\n      width: opts.wallSize,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: -11,\n      y: props.walls.b.length * .45,\n      fill: \"gray\",\n      children: \"B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 6\n    }, this), props.walls.b.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.b,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: 0,\n        horizontal: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: opts.wallSize,\n      y: 0,\n      height: opts.wallSize,\n      width: props.walls.c.length - opts.wallSize * 2,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: props.walls.a.length * .45,\n      y: 0,\n      fill: \"gray\",\n      children: \"C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 6\n    }, this), props.walls.c.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.c,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: -3,\n        horizontal: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: props.walls.a.length - opts.wallSize,\n      y: 0,\n      height: props.walls.d.length,\n      width: opts.wallSize,\n      stroke: \"black\",\n      fill: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: props.walls.a.length + 7,\n      y: props.walls.d.length * .45,\n      fill: \"gray\",\n      children: \"D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }, this), props.walls.d.openings.map(function (o, i) {\n      return /*#__PURE__*/_jsxDEV(Opening, {\n        wall: props.walls.d,\n        opening: o,\n        index: i,\n        size: opts.openingSize,\n        position: props.walls.a.length - opts.wallSize,\n        horizontal: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 11\n  }, this);\n};\n\n_c2 = FloorPlan;\n\nvar Deck = function Deck(props) {\n  var opts = {\n    strokeWidth: 1\n  };\n  var joists = [];\n\n  for (var i = 0; i < props.deck.joists.count; i++) {\n    var x = props.deck.joists.layout[i];\n    var sub = .75;\n    joists.push( /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x - sub,\n      y: 1.5,\n      height: props.deck.width - 1.5,\n      width: 1.5,\n      stroke: \"black\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: props.deck.width,\n    width: props.deck.length,\n    viewBox: \"-10 -1 \" + (props.deck.length + 40) + \" \" + props.deck.width,\n    \"stroke-width\": opts.strokeWidth,\n    \"stroke-alignment\": \"inner\",\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      x: 0,\n      y: props.deck.width,\n      height: 1.5,\n      width: props.deck.length,\n      stroke: \"black\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: 0,\n      y: 0,\n      height: 1.5,\n      width: props.deck.length,\n      stroke: \"black\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 6\n    }, this), joists]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 11\n  }, this);\n};\n\n_c3 = Deck;\n\nvar WorkOrder = function WorkOrder(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Work Order (\", props.shed.id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DECK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), \"Size: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.shed.deck.width / 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }, this), \" (w) x \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: props.shed.deck.length / 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 76\n    }, this), \" (l) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 136\n    }, this), \"Insulate: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: props.shed.deck.insulate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), \"Plate Length: \", props.shed.deck.plates.length, \"\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), \"Joists Length: \", props.shed.deck.joists.length, \"\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), \"Joists Count: \", props.shed.deck.joists.count, \"\\\"\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Walls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      children: JSON.stringify(props.shed)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 11\n  }, this);\n};\n\n_c4 = WorkOrder;\nexport default function Shed() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Shed Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.title,\n        children: \"Shed Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.description,\n        children: \"Work Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.grid,\n        children: data(db).sheds.map(function (shed) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.card,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: shed.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [shed.walls.b.length / 12, \"' x \", shed.walls.a.length / 12, \"'\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Deck, _objectSpread({}, shed), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FloorPlan, _objectSpread({}, shed), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(WorkOrder, {\n              shed: shed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles.footer,\n      children: \"Created by Stephen Reynolds, Jr.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Shed;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Opening\");\n$RefreshReg$(_c2, \"FloorPlan\");\n$RefreshReg$(_c3, \"Deck\");\n$RefreshReg$(_c4, \"WorkOrder\");\n$RefreshReg$(_c5, \"Shed\");","map":{"version":3,"sources":["C:/sites/github/courses/sermon-outlines/stephen-reynolds-jr/Youth Revelation Study/youth-bible-study/pages/shed.js"],"names":["Head","styles","db","sheds","id","deck","floor","width","length","insulate","oncenter","walls","a","stud","openings","type","style","height","top","trim","box","shutters","position","ramp","b","c","loft","d","electrical","roof","siding","color","vent","processOpenings","shed","garageDoors","w","map","wall","v","k","push","garageDoorOn","space","empty","solid","spacing","o","text","textposition","includes","processDecks","plates","joists","count","Math","ceil","layout","x","diff","data","val","key","console","log","Opening","props","horizontal","opening","size","FloorPlan","opts","strokeWidth","wallSize","i","openingSize","positionOffset","Deck","sub","WorkOrder","JSON","stringify","Shed","container","main","title","description","grid","card","footer"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\n\nconst db = {\n  sheds : [\n    {\n      id:'reynolds-example',\n      deck:{\n        floor:'advantech',\n        width:144,\n        length:120,\n        insulate: false,\n        oncenter:16\n      },\n      walls:{\n        a: {\n        length:144,\n        stud:72,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'door', style:'vinyl', width: 61.75, height:72.5, position: 0, ramp:{width:52, length:60}},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ]\n        },\n        b: {\n          length:144,        \n          openings:[\n            {type:'door', style: 'garage', width:84, height:84, top:84, position:0}\n          ]},\n        c:{length:144,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ], loft:{width:36, length: 96}},\n        d:{length:144,        \n        openings:[\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0},\n          {type:'window', style: 'standard', width:18, height:27, top:72.5, trim: false, box:false, shutters: false, position:0}\n        ]},\n        insulate: false,\n        electrical: false\n      },\n      roof: {\n        type:'gable',\n        insulate:false\n      },\n      siding: {\n        type:'vinyl',\n        color:'white'\n      },\n      roof:{\n        type: 'shingle',\n        color: 'black',\n        vent: 'gable'\n      }\n    \n    }\n  ]\n  }\n\nfunction processOpenings(shed){\n\tlet garageDoors = 0\n\tlet walls = [\"a\",\"b\",\"c\",\"d\"]\n\tlet w = []\n\n\twalls.map(function(wall){\n\t\tshed.walls[wall].openings.map(function(v,k){\n\t\t\tif(v.type === \"door\" && v.style===\"garage\"){\n\t\t\t\tgarageDoors++;\n\t\t\t\tw.push(wall)\n\t\t\t}\n\t\t})\n\t})\n\n\n    shed.openings = {\n    \tgarageDoors: garageDoors,\n    \tgarageDoorOn: w\n    }\n\n    walls.map(function(wall){\n\t\tshed.walls[wall].openings.map(function(v,k){\n\t\t\t\n\t\t\t    let space = {\n\t\t\t      empty: 0,\n\t\t\t      solid: shed.walls[wall].length,\n\t\t\t      spacing: 0\n\t\t\t    };\n\n\t\t\t    shed.walls[wall].openings && shed.walls[wall].openings.map(function(o){\n\t\t\t      space.empty = space.empty + o.width\n\t\t\t      space.solid = space.solid-o.width\n\t\t\t    }) \n\n\t\t\t    space.spacing = shed.walls[wall].openings && space.solid/(shed.walls[wall].openings.length+1)\n\n\n\t\t\t    //\n\t\t\t    let position = 0\n\n\t\t\t      switch(k){\n\n\t\t\t        case 0:\n\t\t\t          position = space.spacing\n\t\t\t          break;\n\n\t\t\t        case 1:\n\t\t\t          position = space.spacing + shed.walls[wall].openings[0].width + space.spacing\n\t\t\t          break;\n\n\t\t\t        case 2:\n\t\t\t          position = space.spacing + shed.walls[wall].openings[0].width + space.spacing + shed.walls[wall].openings[1].width+ space.spacing\n\t\t\t          break;\n\t\t\t      }\n\t\t\t    //\n\n\t\t\t  let text = \"W\"\n\n\t\t      if(v.type === \"door\" && v.style === \"garage\"){\n\t\t        text = \"GAR\"\n\t\t      }else if(v.type === \"door\"){\n\t\t      \ttext = \"DR\"\n\t\t      }\n\n\t\t      let textposition = 0\n\n\t\t      if(v.width > 40){\n\t\t        textposition = position + (position * .6)\n\t\t      }else{\n\t\t        textposition = position + 1\n\t\t      }\n\n\t\t     if([\"b\",\"d\"].includes(wall)){\n                if(v.width > 40){\n                  textposition = v.position + v.width - (v.width * .5)\n                }else{\n                  textposition = v.position + v.width - (v.width * .18)\n                }\n             }\n\n\t\t\tshed.walls[wall].openings[k].space = space\n\t\t\tshed.walls[wall].openings[k].position = position\n\t\t\tshed.walls[wall].openings[k].text = text\n\t\t\tshed.walls[wall].openings[k].textposition = textposition\n\t\t\tshed.walls[wall].spacing = space.spacing\n\n\n\t\t})\n\t})\n\n\treturn shed\n}\n\nfunction processDecks(shed){\n\n\t\t{/*Plate Length*/}\n\t\tshed.deck.plates = {length: shed.deck.length}\n   \t\t{/*Joists*/}\n        shed.deck.joists = {\n        \tlength: shed.deck.width-3,\n        \tcount: Math.ceil((shed.deck.length/shed.deck.oncenter)+1) + shed.openings.garageDoors,\n        \tlayout: []\n        }\n\n\t\t  let x = .75\n\t\t  \n\t\t  while (x <= shed.deck.length){\n\t\t  \tshed.deck.joists.layout.push(x)\n\t\t  \t\n\t\t  \tif(x === .75){\n\t\t  \t\tif(shed.openings.garageDoorOn.includes('b')){\n\t\t\t\t\tshed.deck.joists.layout.push(2.25)\n\t\t\t\t}\n\n\t\t\t\tx = 0\n\t\t  \t}\n\n\t\t  \tif(x === shed.deck.length || (shed.deck.length-x) < shed.deck.oncenter){break;}\n\t\t  \tx += shed.deck.oncenter\n\n\t\t  \tif((x + shed.deck.oncenter) > shed.deck.length){ \n\t\t  \t\tconst diff = shed.deck.length-(x-shed.deck.oncenter)\t\t\n\t\t  \t\tx = shed.deck.length - (diff/2)\n\t\t  \t}\n\t\t  }    \n\n\t\tif(shed.openings.garageDoorOn.includes('d') ){\n\t\t\tshed.deck.joists.layout.push(shed.deck.length-2.25)\n\t\t}\n\n\t\tshed.deck.joists.layout.push(shed.deck.length-.75)\n\n\t\treturn shed\n}\n\nfunction data(db){\n\n\n\tdb.sheds.map(function(val, key){\n\t\tlet shed = processOpenings(val)\n\t\tshed = processDecks(shed)\n\t\tdb.sheds[key] = shed\n\t})\n\n\tconsole.log(db.sheds[0])\n\treturn db\n}\n\nfunction Opening(props){\n\n      \t\tif(props.horizontal){\n              return (<>\n              <rect x={props.opening.position} y={props.opening.position} height={props.size} width={props.opening.width} stroke=\"gray\" fill=\"white\"/>\n              <text x={props.opening.textposition} y={props.opening.position+11} fill=\"red\">{props.opening.text}</text></>)\n            }else{        \n              return (<>\n              <rect x={props.opening.position-2} y={props.opening.position} height={props.opening.width} width={props.size} stroke=\"gray\" fill=\"white\"/>\n              <text x={props.opening.position-2} y={props.opening.textposition} fill=\"red\">{props.opening.text}</text></>)\n            }\n\n}\n\nconst FloorPlan = function(props) {\n\n  return (<svg height={props.walls.b.length} width={props.walls.a.length} viewBox={\"-10 -1 \"+ (props.walls.a.length + 40) + \" \" + (props.walls.b.length)} \n    stroke-width={opts.strokeWidth}\n    stroke-alignment=\"inner\"\n    >\n\n     <rect x={opts.wallSize} y={props.walls.b.length-opts.wallSize} height={opts.wallSize} width={props.walls.a.length-(opts.wallSize*2)} stroke=\"black\" fill=\"black\"/>\n     <text x={props.walls.a.length*.45} y={props.walls.b.length+15} fill=\"gray\">A</text>\n     {props.walls.a.openings.map(function(o,i){\n        return <Opening wall={props.walls.a} opening={o} index={i} size={opts.openingSize} position={props.walls.b.length-opts.positionOffset} horizontal={true}/>\n     })}\n\n     <rect x=\"0\" y={0} height={props.walls.b.length} width={opts.wallSize} stroke=\"black\" fill=\"black\"/>\n     <text x={-11} y={props.walls.b.length*.45} fill=\"gray\">B</text>\n      {props.walls.b.openings.map(function(o,i){\n        return <Opening wall={props.walls.b} opening={o} index={i} size={opts.openingSize} position={0} horizontal={false}/>\n      })}\n\n     <rect x={opts.wallSize} y={0} height={opts.wallSize} width={props.walls.c.length-(opts.wallSize*2)} stroke=\"black\" fill=\"black\"/>\n     <text x={props.walls.a.length*.45} y={0} fill=\"gray\">C</text>\n    {props.walls.c.openings.map(function(o,i){\n        return <Opening wall={props.walls.c} opening={o} index={i} size={opts.openingSize} position={-3} horizontal={true}/>\n     })}\n\n     <rect x={props.walls.a.length-(opts.wallSize)} y={0} height={props.walls.d.length} width={opts.wallSize} stroke=\"black\" fill=\"black\"/>\n    <text x={props.walls.a.length+7} y={props.walls.d.length*.45} fill=\"gray\">D</text>\n    {props.walls.d.openings.map(function(o,i){\n        return <Opening wall={props.walls.d} opening={o} index={i} size={opts.openingSize} position={props.walls.a.length-(opts.wallSize)} horizontal={false}/>\n      })}\n\n  </svg>)\n}\n\nconst Deck = function(props) {\n\n  const opts = {\n    strokeWidth:1\n  }\n\n  const joists = []\n \n for (var i = 0; i < props.deck.joists.count; i++) {\n \tlet x = props.deck.joists.layout[i]\n \tlet sub = .75\n  \tjoists.push(<rect x={x-sub} y={1.5} height={props.deck.width-1.5} width={1.5} stroke=\"black\" fill=\"none\"/>)\n }\n\n  return (<svg height={props.deck.width} width={props.deck.length} viewBox={\"-10 -1 \"+ (props.deck.length + 40) + \" \" + (props.deck.width)} \n    stroke-width={opts.strokeWidth}\n    stroke-alignment=\"inner\"\n    >\n\t{/*PLATES*/}\n     <rect x={0} y={props.deck.width} height={1.5} width={props.deck.length} stroke=\"black\" fill=\"none\"/>\n     <rect x={0} y={0} height={1.5} width={props.deck.length} stroke=\"black\" fill=\"none\"/>\n\n \t{/*JOISTS*/}\n     {joists}\n\n  </svg>)\n}\n\nconst WorkOrder = function(props) {\n\n  return (<div>\n      <h1>Work Order ({props.shed.id})</h1>\n\n      <h2>DECK</h2>\n        Size: <input type=\"text\" value={props.shed.deck.width/12} /> (w) x <input type=\"text\" value={props.shed.deck.length/12} /> (l) <br/>\n        Insulate: <input type=\"checkbox\" value={props.shed.deck.insulate} />\n        <br/>\n        Plate Length: {props.shed.deck.plates.length}\"\n        <br/>\n        Joists Length: {props.shed.deck.joists.length}\"\n        <br/>\n        Joists Count: {props.shed.deck.joists.count}\"\n\n      <h2>Walls</h2>\n\n    <textarea>{JSON.stringify(props.shed)}</textarea>\n    </div>)\n}\n\nexport default function Shed() {\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Shed Assistant</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main className={styles.main}>\n        <h1 className={styles.title}>\n          Shed Assistant\n        </h1>\n\n        <p className={styles.description}>\n          Work Orders\n        </p>\n\n        <div className={styles.grid}>\n\n          {\n            data(db).sheds.map(function(shed){\n              return (          \n              <div className={styles.card}>\n                <h3>{shed.id}</h3>\n                <p>{shed.walls.b.length/12}' x {shed.walls.a.length/12}'</p>\n                <hr/>\n                <Deck {...shed}/>\n                <FloorPlan {...shed}/>\n                <hr/>\n                <WorkOrder shed={shed} />\n\n              </div>\n          )\n            })\n          }\n\n\n\n        </div>\n      </main>\n\n      <footer className={styles.footer}>\n        Created by Stephen Reynolds, Jr.\n      </footer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}